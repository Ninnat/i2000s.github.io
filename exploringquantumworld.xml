<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Xiaodong Qi's academic NoteBlog</title>
 <link href="/exploringquantumworld.xml" rel="self"/>
 <link href=""/>
 <updated>2016-02-15T14:15:46+00:00</updated>
 <id></id>
 <author>
   <name>Xiaodong Qi</name>
   <email>i2000s@hotmail.com</email>
 </author>

 
 <entry>
   <title>How and why I'm teaching my kids to code</title>
   <link href="/2014/12/09/teaching_kids_to_program.html"/>
   <updated>2014-12-09T00:00:00+00:00</updated>
   <id>h/2014/12/09/teaching_kids_to_program</id>
   <content type="html">&lt;p&gt;I think that most of the world today drastically underestimates kids -- and by
so doing, often harms them.  Kids love learning, creating, and achieving.  We
do them no service by providing everything for them, or by &amp;quot;protecting&amp;quot; them
from challenging tasks.  This troubling trend is manifest across the physical,
social, and mental aspects of life.  But today I want to focus on one thing to
which I think we should introduce kids earlier and oftener: programming.&lt;/p&gt;

&lt;h1&gt;Why programming?&lt;/h1&gt;

&lt;p&gt;In my childrens&amp;#39; school (which I consider to be quite good), students are
introduced to computers early on.  But this introduction focuses on things
like preparing a PowerPoint presentation, writing an essay in Word, etc.
Learning to use a computer by focusing on such canned applications is a bit
like learning to cook by mastering the operation of a microwave.  Yes, it will
allow you to produce edible results -- assuming your local supermarket has a
freezer section -- but it hardly acquaints you with the breadth of the culinary
arts.  With a microwave, the only choice you really have in the process is how
long to heat the thing up -- all other details have been determined for you, in
advance, by someone else.  You cannot choose a recipe that fits your tastes or
dietary preferences, and you certainly can&amp;#39;t adapt a recipe or invent something
new.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;To really learn to cook, you have to start working with the raw ingredients.  To really learn to compute, you have to learn to program.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I think it is a shame to go through life without ever learning to cook, since
food is such a central part of human existence.  But that concern is mainly
philosophical.  Those of the coming generation who go through life without ever
learning to program will be, in a sense, relegated to second-class status,
unable to understand, control, or create that which governs so much of life.
Think of it: how much of your time is spent interacting directly or
indirectly with some electronic device?  For the computationally-illiterate,
the landscape of daily life is thus one of immovable, incomprehensible objects
which they must adapt to or work around.  But for those who can program, these
objects become tools that are understood and can be modified to fit any desired
purpose.&lt;/p&gt;

&lt;h1&gt;Piquing their interest&lt;/h1&gt;

&lt;p&gt;Small children are fascinated by whatever they see adults doing.  All
three of my daughters (ages 9, 6, and 2) are interested in programming, though
I have never told them they should be.  They became interested in programming
by seeing me at it.  Of course, simply typing in a terminal doesn&amp;#39;t really grab their
attention.  But they get curious when I&amp;#39;m running wave simulations, and ask
questions about the visualizations.  It was surprising to me to find that even
quite abstract things can grab their interest, if there is an interesting plot
to go along with it.  But when I recently showed them simulations of water
waves, their excitement became palpable.&lt;/p&gt;

&lt;p&gt;I was running some simple simulations of waves breaking on a beach, for a talk I was to give in front of a general scientific audience.  The girls began asking what-if questions, and the experimental fun began.  We put a big wall on the beach and then tested how big the waves needed to be before they would go over the wall.  Then we added a big dip in front of the wall.  We tried starting the simulation with all the water flowing in toward the shore.  And so forth.  They came up with the ideas, and I would implement them.  Importantly, the code that sets up the problem was easy to change and run in just a matter of seconds.  I think if they had had to wait even a full minute to find out &amp;quot;what if&amp;quot;, I would have lost them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/shallow_water_fun.jpg&quot; alt=&quot;Solving PDEs: fun for all ages&quot;&gt;&lt;/p&gt;

&lt;p&gt;Did they learn how to program from this?  No, none of them typed any code, and I made only a minimal attempt to explain to them the code I was changing.  But they understood that by typing instructions, one can make a computer do whatever one wants.  They learned that computers can be used to answer fun and interesting questions.  And they got a little exposure to some programming tools and concepts.  Most importantly, they &lt;strong&gt;want&lt;/strong&gt; to understand how to make the computer do whatever they can imagine.&lt;/p&gt;

&lt;h1&gt;Simple programming for kids&lt;/h1&gt;

&lt;p&gt;There are a number of tools designed to give kids a &amp;quot;softer&amp;quot; introduction to programming.  Perhaps the best-known is MIT&amp;#39;s &lt;a href=&quot;&quot;&gt;Scratch&lt;/a&gt;.  I guess the idea is that the connection between typed instructions and computer output is too abstract.  Also, young children may still be developing reading, writing, and typing skills.  So the text editor is replaced by a GUI with cute animals and buttons that add actions.  This may be great for some kids, but again there is the sense that one is only learning to microwave pre-cooked meals.  My experience in introducing my oldest daughter to programming (at 6) is that she was much more excited by the blank slate of a Python interpreter.&lt;/p&gt;

&lt;p&gt;Of course, we didn&amp;#39;t jump into decorators and class inheritance.  There should be fast, fun feedback, especially at the start when the learning curve is steepest.  My daughter got a huge kick out of learning she could make the computer talk (using the system command &amp;quot;say&amp;quot; on a Mac).  This was easily incorporated as part of programming some simple games (like guessing a number or hangman).  Those games naturally introduce simple ideas like loops and if-statements.   The goal is always to create something fun or useful; the programming ideas are only incidental.  In my opinion, programming should work that way at all ages and all levels.&lt;/p&gt;

&lt;p&gt;Some of the things she has programmed so far include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &amp;quot;guess the number&amp;quot; game (that tells you to guess higher/lower at each iteration)&lt;/li&gt;
&lt;li&gt;A game that asks simple math questions&lt;/li&gt;
&lt;li&gt;Hangman (this one was surprisingly easy compared to what I expected, though she didn&amp;#39;t implement any graphics)&lt;/li&gt;
&lt;li&gt;A very simple adventure game (that lets you move around an imaginary world)&lt;/li&gt;
&lt;li&gt;A &amp;quot;countdown to Christmas&amp;quot; that announces the number of hours and days left before Christmas.  I helped her use chrontab to make it run every hour.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Maintaining interest&lt;/h1&gt;

&lt;p&gt;My oldest daughter is 9 now, and while I haven&amp;#39;t taught her as much programming as I&amp;#39;d like, she continues to be interested in and excited about it.  Let me mention a couple of things that I think have helped maintain that excitement:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ownership&lt;/strong&gt;: when she is programming, the program is hers.  I don&amp;#39;t write code for her, although in some cases I have nearly dictated bits and pieces before explaining them.  I also don&amp;#39;t impose the design or details of the end goals.  I provide ideas and suggestions when she is stuck, and I ask lots of probing questions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Freedom&lt;/strong&gt;: I let her dictate the pace.  We don&amp;#39;t have a regularly-scheduled time for her to learn -- we do it when the fancy strikes.  If she becomes frustrated or bored, we stop.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fun&lt;/strong&gt;: Every project is something that she has decided would be fun.  Sometimes the ideas come from her, and sometimes from me, but the decision to pursue one is hers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Difficulties&lt;/h1&gt;

&lt;p&gt;Along the way, I&amp;#39;ve run into some challenges that I haven&amp;#39;t solved.  My
daughter often comes up with projects that would be much too complicated,
especially where graphics are concerned.  I try to find something similar that
would be simple enough.  When working on a project, she usually wants to do it
in a way that is far from my preconceived &amp;quot;optimal&amp;quot; implementation.  I try to
be patient and hands-off, and to let her learn for herself from her attempts.
She also tends to get interested in some non-essential aspect of a project,
which may not involve much programming skill -- like making the computer say a
lot of silly things when you guess wrong in the number-guessing game.  Again, I
try to be enthusiastic and not to interfere.  Most importantly, our programming
sessions are never too serious and are not a source of tension.&lt;/p&gt;

&lt;p&gt;The biggest challenge for me is that teaching programming can be frustrating.
It&amp;#39;s easy to forget how difficult the programming mindset is.  Teaching requires
a lot of patience as the student grapples with ideas that seem obvious to the teacher.
It&amp;#39;s important that the teacher not jump in and &amp;quot;fix&amp;quot; the student&amp;#39;s work -- the
grappling (however slow and painful it may seem) is essential to learning.
I try to stick to the Socratic method -- that is, I can only guide by asking questions.
I also find that my daughter benefits a lot (though she never wants to do it)
from &amp;quot;rubber ducking&amp;quot;, which means reading the code out loud.&lt;/p&gt;

&lt;h1&gt;Hour of Code&lt;/h1&gt;

&lt;p&gt;This morning I participated in part of an amazing world-wide effort to help kids
learn to code.  Last year it exposed 15 million kids to programming.  The idea
is that each kid spend at least one hour learning about programming.  A number of
teachers at the KAUST schools have chosen to participate.  If you want to start
teaching your own kids to program -- or if you want to learn! -- the &lt;a href=&quot;http://hourofcode.com/us&quot;&gt;Hour of
Code website&lt;/a&gt;
has modules for all levels.  For instance, in my daughter&amp;#39;s 3rd-grade class
the kids worked through a set of lessons using a graphical interface (moving
code around with a mouse, rather than typing) in order to make Elsa and Anna (from 
Frozen) ice skate in snowflake-shaped patterns.  The lessons are an amazingly
well-designed sequence that also teaches some geometry and is very appealing
to kids.  My hat is off to the people behind Hour of Code and all the teachers
who use it to make programming part of their curriculum.&lt;/p&gt;

&lt;h1&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Programming literacy presupposes literacy in reading and writing.  For future
generations, these two types of literacy will be of similarly profound
importance.  Computer programs run our world.  If approached in the right way,
programming can be a fun and playful pasttime that builds creativity and
reasoning skills while teaching kids to see the devices that surround them as
malleable tools rather than some kind of opaque oracle.&lt;/p&gt;

&lt;p&gt;One last note: you may be thinking, &amp;quot;but I only have boys.  Can boys learn to
program too?&amp;quot; Sure they can, and you&amp;#39;d better teach them now or they won&amp;#39;t have
a chance against all the great women coders of the future.  ;-)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Clawpack turns 20</title>
   <link href="/2014/12/01/clawpack-20.html"/>
   <updated>2014-12-01T00:00:00+00:00</updated>
   <id>h/2014/12/01/clawpack-20</id>
   <content type="html">&lt;p&gt;Twenty years ago, version 1.0 of the Conservation LAWs PACKage (CLAWPACK, now
&lt;a href=&quot;http://clawpack.org&quot;&gt;Clawpack&lt;/a&gt; was first released by
&lt;a href=&quot;http://faculty.washington.edu/rjl/&quot;&gt;Randy LeVeque&lt;/a&gt;.  It seems fitting to take
the occasion to look back on the intervening years.  What follows are my
thoughts on some of the great things that have resulted.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/clawpack_bday.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;As far as I can tell, 
&lt;a href=&quot;http://www.netlib.org/na-digest-html/94/v94n44.html#5&quot;&gt;this item in the NA-Digest&lt;/a&gt;
is the first public announcement of its existence.
It was also announced more verbosely the same year in
&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=70F5140D445F7B89AF162827E10443A7?doi=10.1.1.48.3424&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;this conference paper&lt;/a&gt;, 
from the proceedings of the 5th HYP conference.
Reading that conference paper now, I am struck by how it incorporated many of
the ideals of scientific software development that we now discuss as if they
were new ideas.  For instance,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Code that is &lt;strong&gt;easy to read and use&lt;/strong&gt;, with plentiful &lt;strong&gt;documentation and examples&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Modular  design&lt;/strong&gt;, that allows low-level functions to be reused
and disparate parts of the code to be modified independently.  In the case of 
Clawpack, this is epitomized by the fact that it allows the solution of &lt;em&gt;any&lt;/em&gt;
system of hyperbolic PDEs by changing just a single routine (the Riemann solver).&lt;/li&gt;
&lt;li&gt;An interface that allows methods and parameters to be changed easily, so that &lt;strong&gt;different
methods can be conveniently compared&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Clawpack was proposed as a &lt;strong&gt;benchmark&lt;/strong&gt; against which to easily &lt;strong&gt;test new algorithms&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Clawpack was released &lt;strong&gt;open source&lt;/strong&gt; and for &lt;strong&gt;free&lt;/strong&gt; on a public FTP server (netlib).&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this day of so much ado about credit for software, it&amp;#39;s also interesting to 
view this paper as an early example of a mathematical publication that is all about software.&lt;/p&gt;

&lt;p&gt;Looking through the code snippets in the paper, I was astonished to recognize how much
of the original Fortran 77 code remains virtually unaltered -- including many variable names,
function interfaces, and overall design.  This is a testament to the quality of the
original code design.&lt;/p&gt;

&lt;p&gt;The central algorithms in Clawpack have also stood the test of time.  The 80&amp;#39;s saw the
heyday of research into second-order TVD methods for conservation laws, and Clawpack
was released just as that era came to a close.  Since then, research has gone in
other directions -- high-order methods, well-balancing, and positivity preservation,
to name a few.  While these new directions have provided additions to Clawpack,
the &amp;quot;classic&amp;quot; algorithms have not changed and are still hard to beat as a 
robust general-purpose tool.&lt;/p&gt;

&lt;p&gt;Of course, much has happened in the intervening twenty years.  The original library
handled 1- and 2-dimensional problems on regular cartesian grids.  In the next few years,
subsequent versions added algorithms for
&lt;a href=&quot;http://faculty.washington.edu/rjl/pubs/wp3d/index.html&quot;&gt;3D&lt;/a&gt;, mapped grids, and
&lt;a href=&quot;http://faculty.washington.edu/rjl/pubs/amrclaw/index.html&quot;&gt;adaptively refined meshes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Additional algorithmic innovations are too numerous to try to list, but one
that has had a lot of impact is &lt;a href=&quot;http://epubs.siam.org/doi/abs/10.1137/S106482750139738X&quot;&gt;the f-wave technique&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The problems to which Clawpack has been applied are certainly &lt;strong&gt;much&lt;/strong&gt; too numerous to list.
But you can start to get an idea by looking at citations of major Clawpack papers like
&lt;a href=&quot;http://scholar.google.com/scholar?cites=17725852758276924945&amp;amp;as_sdt=2005&amp;amp;sciodt=0,5&amp;amp;hl=en&quot;&gt;this&lt;/a&gt;,
&lt;a href=&quot;http://scholar.google.com/scholar?cites=7413565796955546825&amp;amp;as_sdt=2005&amp;amp;sciodt=0,5&amp;amp;hl=en&quot;&gt;this&lt;/a&gt;,
&lt;a href=&quot;http://scholar.google.com/scholar?cites=13042879341964900053&amp;amp;as_sdt=2005&amp;amp;sciodt=0,5&amp;amp;hl=en&quot;&gt;this&lt;/a&gt;,
&lt;a href=&quot;http://scholar.google.com/scholar?cites=13610946858631858859&amp;amp;as_sdt=2005&amp;amp;sciodt=0,5&amp;amp;hl=en&quot;&gt;this&lt;/a&gt;,
and &lt;a href=&quot;http://scholar.google.com/scholar?cites=7380133178147045066&amp;amp;as_sdt=2005&amp;amp;sciodt=0,5&amp;amp;hl=en&quot;&gt;this&lt;/a&gt;.
Perhaps the heaviest use in recent years has involved geophysical flows such as tsunamis and
storm surges, in GeoClaw.&lt;/p&gt;

&lt;h2&gt;The Clawpack family of codes&lt;/h2&gt;

&lt;p&gt;Clawpack has spawned numerous offshoots and extensions, including (but not limited to)
&lt;a href=&quot;http://www.clawpack.org/amrclaw.html&quot;&gt;AMRClaw&lt;/a&gt;, 
&lt;a href=&quot;http://mitran-lab.amath.unc.edu:8084/redmine/projects/bearclaw/wiki&quot;&gt;BearClaw&lt;/a&gt;, 
&lt;a href=&quot;http://cedb.asce.org/cgi/WWWdisplay.cgi?121287&quot;&gt;ZPLClaw&lt;/a&gt;, 
&lt;a href=&quot;http://www.clawpack.org/doc/pyclaw/solvers.html?highlight=sharpclaw#pyclaw.sharpclaw.solver.SharpClawSolver&quot;&gt;SharpClaw&lt;/a&gt;, 
&lt;a href=&quot;https://scholarworks.aub.edu.lb/handle/10938/9322&quot;&gt;CUDAClaw&lt;/a&gt;,
&lt;a href=&quot;http://math.boisestate.edu/%7Ecalhoun/ForestClaw/&quot;&gt;ForestClaw&lt;/a&gt;, 
&lt;a href=&quot;https://github.com/manyclaw/manyclaw&quot;&gt;ManyClaw&lt;/a&gt;,
&lt;a href=&quot;http://www.clawpack.org/pyclaw/index.html&quot;&gt;PyClaw&lt;/a&gt;,
and &lt;a href=&quot;http://www.clawpack.org/geoclaw.html&quot;&gt;GeoClaw&lt;/a&gt;.
Some of these have become part of the Clawpack-5 suite while others
have forked and gone in other directions.&lt;/p&gt;

&lt;p&gt;Nowadays, the term Clawpack refers to a collection of interrelated packages 
that are maintained and developed at &lt;a href=&quot;http://github.com/clawpack&quot;&gt;github.com/clawpack&lt;/a&gt;.
They include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The original (&amp;quot;Classic&amp;quot;) Clawpack;&lt;/li&gt;
&lt;li&gt;AMRClaw (with adaptive mesh refinement)&lt;/li&gt;
&lt;li&gt;GeoClaw (with special tools for geophysical flows)&lt;/li&gt;
&lt;li&gt;PyClaw (a Python interface to both the classic code and the high-order &amp;quot;SharpClaw&amp;quot; algorithms)&lt;/li&gt;
&lt;li&gt;Riemann (a library of approximate Riemann solvers, which can be used with all of the above codes)&lt;/li&gt;
&lt;li&gt;VisClaw (an in-house visualization tool)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Github organization also includes repositories for the docs and for contributed
applications.&lt;/p&gt;

&lt;h2&gt;The Clawpack community&lt;/h2&gt;

&lt;p&gt;As far as I know, the original release was a one-person effort.  But like
most open-source projects, Clawpack quickly became a broader collaboration.
I won&amp;#39;t attempt to credit everyone here; you can see some of the major contributors
&lt;a href=&quot;http://www.clawpack.org/about.html#authors&quot;&gt;here&lt;/a&gt;, and many more by looking
at the contributors pages on Github.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/HPC3-2012-group-photo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;I was surprised to realize that I&amp;#39;ve now been involved with Clawpack for
half of its existence -- ten years!  During those years I&amp;#39;ve gotten to work
with an group of exceptional researchers who are also just outstanding people.
They say that the culture of an open-source software community is shaped strongly
by its founder, and I think Clawpack is no exception.&lt;br&gt;
It seems to me that its creator is not only a great applied mathematician, but
also somene who consistently leads the way in terms of improving the way we do
science.  Clawpack exemplifies his commitment to reproducibility and sustainable
scientific software development, long before those words came into scientific
vogue.  He was an advocate for publishing in journals with low subscription
prices, long before open access became a movement.&lt;br&gt;
Most significantly, he has always been interested first in finding and solving
interesting problems, and only secondarily in publishing papers.
Both through his personal influence and as chair of the SIAM Journals Committee,
he has been influential in making progress in these directions, including the
establishment of a Software section in SISC, the acceptance by SIAM journals
of supplementary materials (including code), and a new policy allowing authors
to post published articles on their own or institutional websites.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/hpc3_attendees.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;As a result, the culture surrounding Clawpack has always encouraged openness
and a willingness to accept new contributions.  Furthermore, I think that the
Clawpack developers have maintained a healthy skepticism toward our own
algorithms and code.  Although we try to make our code useful to as many people
as possible, there has never been any attempt to evangelize the community in
order to increase use of a particular set of algorithms or to increase
metrics like citation counts.  Because of this attitude, the code is
continually improved through incorporation of new algorithmic innovations.&lt;/p&gt;

&lt;h2&gt;Lessons learned&lt;/h2&gt;

&lt;p&gt;Of course, it would be wrong to say that Clawpack has been a perfect model
for scientific code development.  There are plenty of things we&amp;#39;ve done
wrong or could learn to improve.  &lt;/p&gt;

&lt;p&gt;The original announcement says that
&amp;quot;contributions from other users will be gratefully accepted,&amp;quot;
and that has always been true.  Nevertheless, the widely accepted development
model for a long time was that most users would take the code, fork it,
and make their own enhancements that would never get back to the main codebase.
While this prevented feature bloat, it also meant that a great wealth of
knowledge -- largely in the form of sophisticated approximate Riemann solvers
-- will perish on some dusty hard drive
rather than benefitting the larger community.  We&amp;#39;re trying to change
that now by encouraging users to submit pull requests for Riemann
solvers and for entire applications.&lt;/p&gt;

&lt;p&gt;Another example of where I see room for improvement is in output and visualization,
where we have, to some degree, reinvented the wheel.  Clawpack has long used
custom ASCII and binary file formats, that can only be read in by Clawpack
(or by reverse-engineering code for the relatively simple formats).
We are now pushing to move to a more standard default format (probably HDF5),
which would allow easier integration with standard visualization and post-processing
libraries.  &lt;/p&gt;

&lt;p&gt;On the visualization side, the Clawpack developers have created
some extremely useful tools for plotting time-dependent data on structured grids
(including block-structured AMR).  These tools sit on top of MATLAB and matplotlib.
A large amount of work has gone into these &amp;quot;in-house&amp;quot; tools rather than into
leveraging and contributing to dedicated visualization tools.  Meanwhile, individual
users have occasionally connected Clawpack to powerful visualization tools, but
their custom code never got back to the main codebase.  The limited capabilities
of matplotlib in 3D seem to finally be providing sufficient impetus to force us
to integrate with a sophisticated visualization library.  I have been working lately
on integration with &lt;a href=&quot;http://yt-project.org&quot;&gt;yt&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;The next 20 years?&lt;/h2&gt;

&lt;p&gt;It may come as a surprise for a code that&amp;#39;s so long in the tooth, but I think
Clawpack development at present is more vibrant than
ever.  Since 2011, we&amp;#39;ve held annual developer workshops, the latest
of which took place last week here at KAUST.  The pictures on this page
are from those workshops (the cake in the first photo, which shows the Clawpack
logo, was made by my wife, and is a fondant version of a fluid-dynamical
shockwave hitting a low-density bubble).&lt;/p&gt;

&lt;p&gt;As for the future, I won&amp;#39;t claim enough clairvoyance to see 20 years ahead.
But here are some things I hope we can accomplish in the next few years:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Massively parallel adaptive mesh refinement&lt;/strong&gt; (at present, it exists only in
the unreleased ForestClaw code; a concurrent effort is bring this to PyClaw
through BoxLib);&lt;/li&gt;
&lt;li&gt;An ever-growing &lt;strong&gt;library of Riemann solvers&lt;/strong&gt; for increasingly complex systems;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Code-generation&lt;/strong&gt; for solving problems where a custom Riemann solver is not yet available;&lt;/li&gt;
&lt;li&gt;Incorporation of code that runs on &lt;strong&gt;accelerators&lt;/strong&gt; (like CUDAClaw and ManyClaw)
into the main library in a way that allows users to change hardware seamlessly;&lt;/li&gt;
&lt;li&gt;More &lt;strong&gt;teaching tools&lt;/strong&gt; based on Clawpack and IPython notebooks, including a
book showcasing Riemann solutions of important physical systems;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Additional algorithms&lt;/strong&gt; (such as Discontinuous Galerkin methods and new time
stepping techniques) that can be accessed through the same problem setup and use the
same Riemann solvers;&lt;/li&gt;
&lt;li&gt;Better &lt;strong&gt;interoperability&lt;/strong&gt; between Clawpack and other codes (such as 
&lt;a href=&quot;http://proteus.usace.army.mil/&quot;&gt;Proteus&lt;/a&gt;), by making Clawpack more of a true
library.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Are you excited yet?  I certainly am.  Come join the fun!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/clawlogo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Teaching in the open</title>
   <link href="/2014/07/18/teaching_in_the_open.html"/>
   <updated>2014-07-18T00:00:00+00:00</updated>
   <id>h/2014/07/18/teaching_in_the_open</id>
   <content type="html">&lt;p&gt;If you examine the menu bar above, you&amp;#39;ll notice that my site has a new top-level
page: &lt;a href=&quot;/teaching.html&quot;&gt;Teaching&lt;/a&gt;.  This is a direct result of my attending 
&lt;a href=&quot;http://www.youtube.com/watch?v=1e26rp6qPbA&amp;amp;t=26m12s&quot;&gt;Greg Wilson&amp;#39;s inspiring keynote at Scipy 2014&lt;/a&gt;.
That link will take you to the key (for me) part of the talk, but I recommend
watching the whole thing.  His message is: massive collaboration is the real
revolution.  Michael Nielsen made the same statement in &lt;em&gt;Reinventing Discovery&lt;/em&gt;;
here Greg applies this statement to university education, and asks:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Why don&amp;#39;t instructors open-source their teaching materials?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This new page is my own effort to enable that revolution.  In fact, I&amp;#39;ve been
gradually putting my teaching materials online for the past couple of years, without
giving it much thought.  The teaching page collects all the resources I&amp;#39;ve made
available in one place.&lt;/p&gt;

&lt;p&gt;Something even more exciting in this vein is coming in the fall.  If you want to
know a little about it, watch 
&lt;a href=&quot;http://www.youtube.com/watch?v=TWxwKDT88GU&amp;amp;t=56m2s&quot;&gt;the last few minutes of Lorena Barba&amp;#39;s excellent Scipy keynote on computational thinking and teaching&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Stay tuned.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>KAUST goes open access</title>
   <link href="/2014/07/01/KAUST_goes_open_access.html"/>
   <updated>2014-07-01T00:00:00+00:00</updated>
   <id>h/2014/07/01/KAUST_goes_open_access</id>
   <content type="html">&lt;p&gt;I&amp;#39;m proud to announce that as of today, KAUST has officially adopted an open access
policy!  &lt;/p&gt;

&lt;h1&gt;What it means&lt;/h1&gt;

&lt;p&gt;Institutional open access (OA) policies are a primary tool in the effort to
allow academics to retain control of their own work.  MIT and Harvard
were the first to adopt such policies; now hundreds of institutions have
similar policies.&lt;/p&gt;

&lt;p&gt;In short, &lt;strong&gt;the policy ensures that KAUST has non-exclusive rights to distribute
all research done at KAUST.  This right precedes any publishing or copyright
agreement terms&lt;/strong&gt;.  It also places a responsibility on KAUST faculty to provide a
pre-print of each paper to the library.&lt;/p&gt;

&lt;p&gt;The policy has nothing to do with publishing in open access journals (so-called
Gold OA).  Authors continue to publish in the same manner -- and the same
journals -- as before.&lt;/p&gt;

&lt;p&gt;KAUST&amp;#39;s OA policy is based closely on the text &lt;a href=&quot;http://cyber.law.harvard.edu/hoap/Good_practices_for_university_open-access_policies&quot;&gt;recommended by the Harvard Open
Access Project (HOAP)&lt;/a&gt;.
HOAP was an extremely valuable resource for us in developing a policy and 
convincing the faculty, administration, and legal team to approve it.&lt;/p&gt;

&lt;h1&gt;How it happened&lt;/h1&gt;

&lt;p&gt;This is the culmination of a process that started back in 2011 with a lunch
conversation between Rick Johnson (KAUST librarian and long-time OA advocate)
and myself.
We were both frustrated that KAUST theses were being &amp;quot;published&amp;quot; in a way that
was inaccessible to anyone outside the University.  Over the next several months,
we successfully worked to ensure that all KAUST theses would be accessible for
free to the general public.  In fact, the first thesis to be published openly
(and for months the only one) was 
&lt;a href=&quot;http://archive.kaust.edu.sa/kaust/handle/10754/209415&quot;&gt;that of my MS student, Manuel Quezada de Luna&lt;/a&gt;.&lt;br&gt;
Now anyone can read the currently 367 completed KAUST theses 
&lt;a href=&quot;http://archive.kaust.edu.sa/kaust/handle/10754/124545/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We decided the next order of business was a full institutional open-access policy.
With strong support from Jim Calvin (VP for academic affairs) and my faculty colleagues
Suzana Nunes and Sahraoui Chaieb, we eventually hammered out something that all 
could agree on (even the lawyers!)  The policy was championed by our new library
director, Molly Tamarkin, as soon as she arrived at KAUST earlier this year.&lt;/p&gt;

&lt;h1&gt;The policy&lt;/h1&gt;

&lt;p&gt;Here&amp;#39;s the full text of the policy, which at the moment is only available on
an internal site.  I&amp;#39;ll post a link here when a public announcement is made.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;University faculty members, research scientists, post-doctoral fellows, students and employees (“University Research Authors”) grant to the University non-exclusive permission to make available their scholarly research articles and to exercise the copyright in those articles for the purpose of open dissemination. &lt;/p&gt;

&lt;p&gt;More specifically, each University Research Author grants to the University a non-exclusive, irrevocable, worldwide license to exercise any and all rights under copyright relating to each of his or her scholarly research articles, in any medium, provided that the articles are not sold for a profit, and to authorize others to do the same. &lt;/p&gt;

&lt;p&gt;The Office of the Vice President for Academic Affairs or its designate may waive application of the license for a particular article or delay access for a speciﬁed period of time upon express direction by the author. &lt;/p&gt;

&lt;p&gt;Each faculty member or researcher will provide an electronic copy of the author&amp;#39;s final version of each article no later than the date of its publication at no charge in accordance with the guidelines published from time to time by the Office of the Vice President for Academic Affairs. &lt;/p&gt;

&lt;p&gt;The Office of the Vice President for Academic Affairs charges the KAUST Library to develop and monitor a plan to comply with this policy and existing copyright obligations in a manner as convenient for the faculty as possible. &lt;/p&gt;

&lt;p&gt;The Office of the Vice President for Academic Affairs or its delegate will be responsible for interpreting this policy, resolving disputes concerning its interpretation and application, and recommending changes to the Academic Council from time to time. &lt;/p&gt;

&lt;p&gt;The KAUST Library will review this policy after three years. &lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Teaching with SageMathCloud</title>
   <link href="/2014/05/31/teaching_with_SMC.html"/>
   <updated>2014-05-31T00:00:00+00:00</updated>
   <id>h/2014/05/31/teaching_with_SMC</id>
   <content type="html">&lt;p&gt;During the past Spring semester at KAUST, I again taught AMCS 252, our masters-level
course on numerical analysis for differential equations.  I&amp;#39;ve been teaching the course
using Python for 5 years now.  This year, for the first time, &lt;em&gt;I didn&amp;#39;t spend
any time helping students install Python, numpy, matplotlib, or scipy&lt;/em&gt;.  In fact, I even
had them use Clawpack -- and they didn&amp;#39;t need to install it.  Why?  Because they
all used &lt;a href=&quot;http://cloud.sagemath.com&quot;&gt;SageMathCloud&lt;/a&gt; for the course.&lt;/p&gt;

&lt;h2&gt;A little history&lt;/h2&gt;

&lt;p&gt;For the past several years, I have been increasingly integrating into the
course &lt;a href=&quot;https://github.com/ketch/AMCS252&quot;&gt;a set of electronic notebooks&lt;/a&gt; in
which the students are presented with some explanations and code, followed by exercises
that involve modifying, running, and understanding the numerical algorithms implemented
in the notebook.  At first these were a set of Sage worksheets, and I ran a local
Sage server within the KAUST network.  When the VM that held the server died a horrible
and irreversible death, I decided to switch to the IPython notebook format that had
become increasingly popular.  It wasn&amp;#39;t too hard to &lt;a href=&quot;http://www.davidketcheson.info/2013/01/16/sage_to_ipython.html&quot;&gt;convert all my Sage worksheets
to IPython notebooks&lt;/a&gt;.  But my students had to either do all their work in the
computer lab or figure out how to install the necessary Python packages on their
own machines.  This was a bit of a time sink for me, although it has gotten easier
each year thanks to packages like &lt;a href=&quot;https://store.continuum.io/cshop/anaconda/&quot;&gt;Anaconda&lt;/a&gt; and &lt;a href=&quot;https://www.enthought.com/products/canopy/&quot;&gt;Canopy&lt;/a&gt;.  This also meant
that they all ended up working in slightly different environments, which occasionally
caused problems.&lt;/p&gt;

&lt;h2&gt;IPython notebooks in the cloud&lt;/h2&gt;

&lt;p&gt;In the last year, two new cloud services emerged, both offering free accounts
with the ability to run IPython notebooks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wakari.io&quot;&gt;Wakari&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cloud.sagemath.com&quot;&gt;Sage Math Cloud&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I realized that by using one of these services, I could avoid dealing with installation
issues and ensure that everyone worked in an identical environment.  Though I
have found both Wakari and SMC to be useful, I ended up going with SMC for the course
because it has, in my opinion, a more intuitive user interface.&lt;/p&gt;

&lt;h2&gt;Getting started&lt;/h2&gt;

&lt;p&gt;On the first day of class, students had only to create a free SMC account,
create a new project, and type the URL of the course github repo into the &amp;quot;new file&amp;quot;
box, which automatically caused it to be cloned into their SMC project.  As I
updated materials during the semester, all they had to do was open a SMC terminal
and type &amp;quot;git pull&amp;quot; (in fact, none of the students had ever used git before,
but none of them had any difficulty with this during the course).  &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.sagemath.com/art/templates.png&quot; alt=&quot;Git clone via SMC&quot; height=&quot;200&quot; align=&quot;center&quot;&gt;&lt;/p&gt;

&lt;p&gt;Another great advantage of using a cloud service was that students could work
or show their work from any computer.  Since it was a small class, I had them
present homework solutions in-class.  They could all present solutions using
the computer attached to the projector in the room by just logging into their own
SMC account.  That meant we avoided losing 5 or 10 minutes of class time in
order to switch cables or transfer files.&lt;/p&gt;

&lt;h2&gt;Feedback&lt;/h2&gt;

&lt;p&gt;Overall, the students&amp;#39; feedback was very positive.  Most notably, although some
of them did eventually install Python and the related packages locally on their
laptops, they all chose to use SMC for their homework assignments throughout the
course.  There were some noticeable latency issues (the ping time between Saudi Arabia
and Seattle is 200ms), and SMC currently has a 10-20 second delay the first time
you open an IPython notebook (there&amp;#39;s no such delay for Sage worksheets).  But those
were not showstoppers, and I think by the time I teach my next course those issues
will be resolved (by an IPython upgrade on SMC and by the launch of a European SMC
server, respectively).  William Stein, creator of SMC (and Sage) was extremely
responsive and helpful (in fact, he created a trial European server recently in response
to my and others&amp;#39; comments about latency).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/656693/smc_screenshot.png&quot; alt=&quot;SMC&quot; align=&quot;center&quot;&gt;&lt;/p&gt;

&lt;p&gt;I used SMC again to &lt;a href=&quot;https://github.com/ketch/HyperPython/blob/master/README.md&quot;&gt;teach a 1-day tutorial&lt;/a&gt; at &lt;a href=&quot;http://jkk.sze.hu/en_GB/program&quot;&gt;a workshop&lt;/a&gt; this month.  Other than
a couple of minor hiccups, it again worked very well.  I plan to continue
using it for teaching in the future.  One feature I haven&amp;#39;t used yet (but intend
to) is the ability to &amp;quot;collaborate&amp;quot; on a project so that multiple users can edit it
at the same time.  I understand that 
&lt;a href=&quot;http://sagemath.blogspot.com/2014/04/the-sagemathcloud-roadmap.html&quot;&gt;many other great features are in the works&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I would strongly recommend SMC to other teachers of computationally-oriented
courses, even if you&amp;#39;re not using
IPython notebooks or Sage worksheets.  As long as all the software for your
course is freely available, you can install it all on SMC so that students
have identical environments, accessible from anything with a web browser,
with no need to do any installation of their own.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re interested in my notebooks, you can find them here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ketch/finite-difference-course&quot;&gt;Spring 2013 course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ketch/AMCS252&quot;&gt;Spring 2014 course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ketch/HyperPython&quot;&gt;HyperPython tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Just be warned that some are more polished than others, and they&amp;#39;re likely
to all get a makeover soon.&lt;/p&gt;

&lt;p&gt;Now that I keep a lot of my &lt;a href=&quot;https://github.com/ketch/shallow_water_periodic_bathymetry/blob/master/pyclaw/shallow_water_diffraction.ipynb&quot;&gt;research in IPython notebooks on Github&lt;/a&gt;,  I&amp;#39;m also
thinking that SMC is a way to be able to show that research to anyone, anywhere.
Heck, I can create a project, clone a Github repo, and run PyClaw in a notebook &lt;strong&gt;on my phone!&lt;/strong&gt;
Just amazing.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>HyperPython</title>
   <link href="/2014/05/28/hyperpython.html"/>
   <updated>2014-05-28T00:00:00+00:00</updated>
   <id>h/2014/05/28/hyperpython</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ketch/HyperPython/master/figures/finite_volume.png&quot; alt=&quot;Finite volumes&quot; height=&quot;200&quot; align=&quot;center&quot;&gt;&lt;/p&gt;

&lt;p&gt;Last week, I ran a 1-day tutorial at the 
&lt;a href=&quot;http://jkk.sze.hu/en_GB/program&quot;&gt;Workshop on Design, Simulation, Optimization and Control of Green Vehicles and Transportation&lt;/a&gt;.  The idea was to teach attendees about Python programming,
basic theory of hyperbolic conservation laws, finite volume methods, and how to use 
&lt;a href=&quot;http://clawpack.github.io/doc/pyclaw/&quot;&gt;PyClaw&lt;/a&gt;, all in the space of a few hours.&lt;/p&gt;

&lt;p&gt;Inspired by Lorena Barba&amp;#39;s recent release of 
&lt;a href=&quot;http://lorenabarba.com/blog/announcing-aeropython/&quot;&gt;AeroPython&lt;/a&gt;,
I decided to develop a short set of IPython notebooks for the tutorial.
The result is &lt;a href=&quot;https://github.com/ketch/HyperPython&quot;&gt;HyperPython&lt;/a&gt;,
a set of 5 lessons (plus Python crash course):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://nbviewer.ipython.org/github/ketch/HyperPython/blob/master/Lesson_00_Python.ipynb&quot;&gt;Lesson 0: Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nbviewer.ipython.org/github/ketch/HyperPython/blob/master/Lesson_01_Advection.ipynb&quot;&gt;Lesson 1: Advection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nbviewer.ipython.org/github/ketch/HyperPython/blob/master/Lesson_02_Traffic.ipynb&quot;&gt;Lesson 2: Traffic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nbviewer.ipython.org/github/ketch/HyperPython/blob/master/Lesson_03_High-resolution_methods.ipynb&quot;&gt;Lesson 3: High-resolution methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nbviewer.ipython.org/github/ketch/HyperPython/blob/master/Lesson_04_Fluid_dynamics.ipynb&quot;&gt;Lesson 4: Fluid dynamics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nbviewer.ipython.org/github/ketch/HyperPython/blob/master/Lesson_05_PyClaw.ipynb&quot;&gt;Lesson 5: PyClaw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These won&amp;#39;t make you an expert, but if you&amp;#39;re looking for something short,
practical, and fun, please give them a try.  You may also find the last two
notebooks useful if you&amp;#39;re looking for a good introduction to PyClaw.&lt;/p&gt;

&lt;p&gt;These may be greatly expanded in the future into a full-fledged semester-length course.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Open access is about open access, not journals</title>
   <link href="/2013/12/13/open_access_means_open_access.html"/>
   <updated>2013-12-13T00:00:00+00:00</updated>
   <id>h/2013/12/13/open_access_means_open_access</id>
   <content type="html">&lt;p&gt;In October, &lt;a href=&quot;http://news.sciencemag.org/sites/default/files/media/Open%20Access%20SurveySummary_11082013_0.pdf&quot;&gt;Science Magazine conducted a survey regarding open
access&lt;/a&gt;.
Among the questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;How important is it for scientific papers to be freely accessible to the public?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Of the papers that you published in the last 3 years, what percentage did you submit to 
fully open access journals?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;72%&lt;/strong&gt; replied &amp;quot;extremely important&amp;quot; to the first question, while only &lt;strong&gt;58%&lt;/strong&gt;
indicated they had submitted any paper to an open access journal.  Does this
mean that scientists are not acting in agreement with their own principles?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It may shock the editors of Science, but the open access movement is not about
changing the funding model for academic publishers.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open access means that research results can be read by anyone, for free.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Scientists can accomplish that without any help from publishers.  The fact is
that most scientists don&amp;#39;t view &lt;em&gt;open access journals&lt;/em&gt; as the best way to make
their work accessible.  Another question from the Science survey asked&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Which options for making papers freely available do you prefer?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The most common answer (66%) was &lt;strong&gt;&amp;quot;Immediate access through a repository, such
as PubMedCentral or Arxiv, or on an author’s web site&amp;quot;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This is quick and painless.  &lt;a href=&quot;http://www.sherpa.ac.uk/romeo/statistics.php?la=en&amp;amp;fIDnum=%7C&amp;amp;mode=simple&quot;&gt;It is allowed by an overwhelming majority of
publishers&lt;/a&gt;.
It requires no mandates from governments or universities.  It requires no extra
funding.  Anyone can do it, and every scientist who cares a whit about open
access already has done it.  &lt;/p&gt;

&lt;p&gt;If someone tells you that we need governments or publishers to intervene to
make open access possible, you can be sure that his agenda is something other
than open access.  The only obstacle left is our own apathy.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>A Tale of Two Theorems</title>
   <link href="/2013/10/14/CFL-disk.html"/>
   <updated>2013-10-14T00:00:00+00:00</updated>
   <id>h/2013/10/14/CFL-disk</id>
   <content type="html">&lt;p&gt;In their &lt;a href=&quot;http://dx.doi.org/10.1147/rd.112.0215&quot;&gt;celebrated 1928 paper&lt;/a&gt;,
Courant, Friedrichs, and Lewy proved a geometric condition that must be
satisfied by a convergent &lt;strong&gt;partial&lt;/strong&gt; differential equation discretization --
the famous CFL condition.  Briefly, the CFL theorem says that the numerical
method must transport information at least as quickly as information travels in
the true PDE solution.  The proof is geometric and is conveyed through numerous
diagrams.&lt;/p&gt;

&lt;p&gt;Exactly fifty years later, in 1978, Rolf Jeltsch and Olavi Nevanlinna
&lt;a href=&quot;http://dx.doi.org/10.1007/BF01932030&quot;&gt;published a theorem&lt;/a&gt; [JN] that deals with
bounding the modulus of a polynomial $\psi(z)$ over a disk of the form 
$$D&lt;em&gt;r = {z \in {\mathbb C} : |z-r|\le r}.$$  Their theorem says that if
$\psi(z) = 1 + z + a&lt;/em&gt;2 z^2 + \cdots + a&lt;em&gt;s z^s$ and $|\psi(z)|\le 1$ for all $z$
in such a disk $D&lt;/em&gt;r$, then the disk radius $r$ is at most $s$.  The proof of
this result is, of course, purely algebraic.&lt;/p&gt;

&lt;p&gt;These results apparently have nothing to do with one another.  And yet it turns
out that &lt;strong&gt;they are equivalent statements!&lt;/strong&gt;  That is, the CFL theorem can be
proved using the JN disk theorem.  And the JN disk theorem can be proved using
the CFL condition (and no algebraic techniques).  This was explained in &lt;a href=&quot;http://dx.doi.org/10.1007/BF01389633&quot;&gt;a
beautiful paper of Sanz-Serna and
Spijker&lt;/a&gt; [SS] in 1986, and the result
deserves to be much more well known.&lt;/p&gt;

&lt;h3&gt;First order upwinding&lt;/h3&gt;

&lt;p&gt;Consider the problem of approximating the value $u(x&lt;em&gt;i,t&lt;/em&gt;n)$ for the advection equation
$$u&lt;em&gt;t + u&lt;/em&gt;x = 0.$$
The exact solution can be obtained by characteristics from the previous time level:
$$u(x&lt;em&gt;i,t&lt;/em&gt;n) = u(x&lt;em&gt;i-k,t&lt;/em&gt;{n-1}),$$
where $k$ is the time step size.
The CFL theorem says that the stencil used for approximating $u(x&lt;em&gt;i,t&lt;/em&gt;n)$ must
enclose the point $x_i-k$.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s discretize the advection equation in space using upwind differences:
$$U&lt;em&gt;i&amp;#39;(t) = -\left(U&lt;/em&gt;i-U&lt;em&gt;{i-1}\right).$$
Here for simplicity we&amp;#39;ve assumed a spatial mesh width of 1.
Taking periodic boundary conditions, this semi-discretization is a system of
ODEs of the form $U&amp;#39;=LU$ where $L$ is the circulant matrix 
$$
\begin{pmatrix}
-1 &amp;amp; &amp;amp; &amp;amp; 1 \
1  &amp;amp; -1 &amp;amp; &amp;amp; \
&amp;amp; \ddots &amp;amp; \ddots \
&amp;amp; &amp;amp; 1 &amp;amp; -1 \
\end{pmatrix}$$
(as usual, all the omitted entries are zero).
The eigenvalues of this matrix all lie on the boundary of the disk of radius
one centered at $z=-1$, which we denote by $D&lt;/em&gt;1$.  Here are the eigenvalues of
a 50-point discretization:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/656693/wiki_images/disk_eigen.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;If we discretize in time with Euler&amp;#39;s method, we get the scheme
$$U^n&lt;em&gt;i = U^{n-1}&lt;/em&gt;i - k\left(U&lt;em&gt;i-U&lt;/em&gt;{i-1}\right).$$
This scheme computes the solution at $(x&lt;em&gt;i,t&lt;/em&gt;n)$ using values at
$(x&lt;em&gt;{i-1},t&lt;/em&gt;{n-1})$ and $(x&lt;em&gt;i,t&lt;/em&gt;{n-1})$, so the CFL theorem says it can be
convergent only if $x&lt;em&gt;i-k$ lies in the interval $(x&lt;/em&gt;{i-1},x&lt;em&gt;i)$.  Since
$x&lt;/em&gt;{i-1} = x_i - 1$, this holds iff the step size $k$ is smaller than 1.  &lt;/p&gt;

&lt;p&gt;This result -- that the first-order upwind method is stable and convergent only
for CFL number at most one -- is well known, and can also be derived using
basic method of lines stability theory.  The stability function for Euler&amp;#39;s
method is $\psi(z) = 1 + z$, so it is stable only if $z=k\lambda$ lies in the
disk ${z : |1+z|\le 1} = D_1$ for each eigenvalue $\lambda$ of $L$.  What we
have seen in the foregoing is that this stability condition can be derived
directly from the CFL condition, without considering the eigenvalues of $L$ or
the stability region of Euler&amp;#39;s method.&lt;/p&gt;

&lt;h3&gt;Proving the JN disk theorem via the CFL theorem&lt;/h3&gt;

&lt;p&gt;For higher order discretizations, the CFL condition is necessary but not
generally sufficient for stability.  Nevertheless, we can use it to derive the
JN disk theorem.  I&amp;#39;ll restrict the explanation here to Runge-Kutta methods,
but the extension to multistep methods is very simple.  Suppose that we
discretize in time using a Runge-Kutta method with $s$ stages.  In each stage,
one point further to the left is used, so typically the stencil for computing
$u(x&lt;em&gt;i,t&lt;/em&gt;n)$ includes the values from the previous step at $x&lt;em&gt;{i-s}, x&lt;/em&gt;{i-s+1},
\dots, x&lt;em&gt;i$.  Thus the CFL theorem says the method cannot be convergent unless
$x&lt;/em&gt;i-k$ lies in the interval $(x&lt;em&gt;{i-s},x&lt;/em&gt;i)$; i.e., unless $k\le s$.
Meanwhile, the stability function $\psi(z)$ of the Runge-Kutta method is a
polynomial of degree at most $s$.  Method of lines analysis tells us that the
full discretization is stable if $kD&lt;em&gt;1$ lies inside the region ${z :
|\psi(z)|\le 1}.$  Since we know it is unstable for $k&amp;gt;s$, this implies that
if $|\psi(z)|\le 1$ over the disk $D&lt;/em&gt;k$, then $k \le s$. &lt;/p&gt;

&lt;h3&gt;Recap&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;An $s$-stage upwind discretization has stencil width $s$.&lt;/li&gt;
&lt;li&gt;The CFL condition implies that this discretization cannot be convergent for Courant numbers larger than $s$.&lt;/li&gt;
&lt;li&gt;The spectrum of the semi-discretization is the boundary of the disk $D_1$.&lt;/li&gt;
&lt;li&gt;Stability analysis implies that the full discretization is convergent if the scaled spectrum $kD&lt;em&gt;1 = D&lt;/em&gt;k$ lies inside the stability region of the time discretization.&lt;/li&gt;
&lt;li&gt;Thus no $s$-stage time discretization can have a stability region including the disk larger than $D_s$ (this is the content of the JN disk theorem).&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Ellipses&lt;/h3&gt;

&lt;p&gt;Of course, we didn&amp;#39;t have to choose first-order upwinding in space; we could
have taken any spatial discretization.  For instance, if we use centered
differences:
$$U&lt;em&gt;i&amp;#39;(t) = -\left(U&lt;/em&gt;{i+1}-U_{i-1}\right)$$
then the spectrum of the semi-discretization lies on the imaginary axis in the
interval $[-i,i]$.  Then the same line of reasoning then tells us that the
largest imaginary-axis interval of stability for an $s$-stage method is
$[-is,is]$.  By considering convex combinations of upwind and centered
differences, we get similar results for a family of ellipses; this is the
content of Theorem 5 of [SS].&lt;/p&gt;

&lt;h3&gt;Parabolic problems&lt;/h3&gt;

&lt;p&gt;It&amp;#39;s well known that the largest interval of stability of a consistent
$s$-stage method on the negative real axis has length $s^2$; the corresponding
polynomials are (shifted) Chebyshev polynomials.  You might hope that this
could also be deduced by considering a centered difference semi-discretization
of the heat equation and applying the CFL theorem.  That would be very neat,
since it would provide a connection between PDE stability theory and the
optimality of Chebyshev polynomials.&lt;/p&gt;

&lt;p&gt;Indeed, explicit time discretizations generally lead to step size restrictions
depending on the square of the spatial mesh width when paired with the usual
centered spatial discretization.  But the CFL theorem is not sharp for these
discretizations; it only tells us that $k$ must vanish vanish more quickly than
the spatial mesh width.  So no deduction along these lines seems possible.&lt;/p&gt;

&lt;p&gt;#spnetwork #recommend doi:/10.1007/BF01389633&lt;/p&gt;

&lt;p&gt;#discusses doi:10.1147/rd.112.0215
#discusses doi:10.1007/BF01932030&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Documentation, testing, and default arguments for your MATLAB packages</title>
   <link href="/2013/10/12/MATLAB-docs-testing.html"/>
   <updated>2013-10-12T00:00:00+00:00</updated>
   <id>h/2013/10/12/MATLAB-docs-testing</id>
   <content type="html">&lt;p&gt;I primarily develop code in Python and Fortran, but I also use MATLAB for
certain things.  For instance, I haven&amp;#39;t found a Python-friendly nonlinear
optimization package that measures up to the capabilities of MATLAB&amp;#39;s
optimization toolbox (fmincon).  So my RK-opt package for optimising
Runge-Kutta methods is written all in MATLAB.&lt;/p&gt;

&lt;p&gt;The trouble is that working in Python has spoiled me for other languages.
Python has the excellent &lt;a href=&quot;http://sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt; package for writing
&lt;strong&gt;beautiful documentation&lt;/strong&gt;.  Python has the
&lt;a href=&quot;http://nose.readthedocs.org/&quot;&gt;nosetests&lt;/a&gt; harness for easily writing and
running &lt;strong&gt;tests&lt;/strong&gt;.  And Python has &lt;a href=&quot;http://www.diveintopython.net/power_of_introspection/optional_arguments.html&quot;&gt;a simple syntax for including &lt;strong&gt;optional function
arguments&lt;/strong&gt; with default
values&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;MATLAB doesn&amp;#39;t support any of these things so elegantly*.&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;This was true one year ago, when I started writing this.  But it seems things
have improved -- see below&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In any case, all is not lost -- I have found reasonable approximations in the
MATLAB ecosystem, and in some cases I&amp;#39;ve adapted the Python tools to work with
MATLAB. &lt;/p&gt;

&lt;h3&gt;Documenting MATLAB projects using Sphinx&lt;/h3&gt;

&lt;p&gt;In principle, Sphinx can be used to write documentation for packages written in
any language.  However, its &lt;a href=&quot;http://sphinx-doc.org/ext/autodoc.html&quot;&gt;autodoc&lt;/a&gt;
functionality, which automatically extracts Python docstrings, doesn&amp;#39;t work
with MATLAB.  For RK-Opt, I hacked together a simple workaround in &lt;a href=&quot;https://github.com/ketch/RK-opt/blob/master/doc/m2rst.py&quot;&gt;this
74-line Python file&lt;/a&gt;.
It goes through a given directory, extracts the MATLAB docstring for each
function, and compiles them into an .rst file for Sphinx processing.  You can
see an &lt;a href=&quot;http://numerics.kaust.edu.sa/RK-opt/RK-coeff-opt.html&quot;&gt;example of the results
here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: &lt;em&gt;as I&amp;#39;m writing this, I&amp;#39;ve discovered a new &lt;a href=&quot;https://bitbucket.org/bwanamarko/sphinx-contrib/src/tip/matlabdomain/README.rst&quot;&gt;MATLAB extension for
Sphinx&amp;#39;s
autodoc&lt;/a&gt;.
I will have to try it out sometime; please let me know in the comments if
you&amp;#39;ve used it.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Automated testing in MATLAB&lt;/h3&gt;

&lt;p&gt;I&amp;#39;ve become convinced that writing at least one or two tests is worthwhile for
even small, experimental packages.  In Python, it&amp;#39;s simple to include test in
the docs and run them with doctest, or write test suites and run them with
nosetest.  For MATLAB, I would have recommended the third-party &lt;a href=&quot;http://www.mathworks.com/matlabcentral/fileexchange/22846-matlab-xunit-test-framework&quot;&gt;xunit
framework&lt;/a&gt;.
But it seems that this year &lt;a href=&quot;http://www.mathworks.com/help/matlab/matlab-unit-test-framework.html&quot;&gt;Mathworks finally added this functionality to
MATLAB&lt;/a&gt;.
Even so, you might want to use xunit because &lt;a href=&quot;https://github.com/tgs/matlab-xunit-doctest&quot;&gt;it&amp;#39;s possible to run doctests
with it&lt;/a&gt; but not with MATLAB&amp;#39;s new
built-in framework.  Also, you can get XML output from xunit, which a number of
other tools can analyze (for instance, to tell you about code coverage).  For
an example of how to use xunit, &lt;a href=&quot;https://github.com/ketch/RK-opt/blob/master/RK-coeff-opt/test_rkopt.m&quot;&gt;see
RK-Opt&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Again, I&amp;#39;d be interested to hear from you in the comments if you&amp;#39;ve used
MATLAB&amp;#39;s new built-in test harness.&lt;/p&gt;

&lt;h3&gt;Optional arguments with default values&lt;/h3&gt;

&lt;p&gt;MATLAB does allow the user to specify only some subset of the input arguments
to a function -- as long as the omitted ones all come after the included ones.
I used to take advantage of this, with this kind of code inside the function:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;if nargin&amp;lt;5 rmax=50; end
if nargin&amp;lt;4 eps=1.e-10; end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is a reasonable solution in very small functions, but it breaks if you
want to add new arguments that don&amp;#39;t come at the end, and if you want to
specify the very last value then you have to specify them all.  A better
general solution is the &lt;a href=&quot;http://www.mathworks.com/help/matlab/ref/inputparserclass.html&quot;&gt;inputParser
object&lt;/a&gt;.
It&amp;#39;s much less natural than Python&amp;#39;s syntax, but the result for the user is the
same: arbitrary subsets of the optional arguments can be specified; default
values will be used for the rest.  As a bonus, you can check the types of the
inputs.  &lt;a href=&quot;https://github.com/ketch/RK-opt/blob/master/polyopt/opt_poly_bisect.m#L258&quot;&gt;Here&amp;#39;s an example of
usage&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you know of better ways to do any of these things, please let me know in the comments!&lt;/p&gt;

&lt;p&gt;Of course, it&amp;#39;s entirely possible to develop large, well-documented,
well-tested, user-friendly packages in MATLAB --
&lt;a href=&quot;http://www.chebfun.org/&quot;&gt;Chebfun&lt;/a&gt; is one example.  It&amp;#39;s just that
this is the exception and not the rule in the MATLAB community.  Hopefully
better integration with testing and documentation tools will improve this
situation.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Giving a math talk using IPython notebook slides and Wakari</title>
   <link href="/2013/09/21/ipython_notebook_slides_talks.html"/>
   <updated>2013-09-21T00:00:00+00:00</updated>
   <id>h/2013/09/21/ipython_notebook_slides_talks</id>
   <content type="html">&lt;h1&gt;Giving a math talk using IPython notebook slides and Wakari&lt;/h1&gt;

&lt;p&gt;Last week I gave my first full-length &lt;em&gt;executable talk&lt;/em&gt;: one in which I showed the code that produced (almost) all the results I presented.  You can &lt;a href=&quot;http://www.davidketcheson.info/talks/SciCADE-talk.slides.html#/&quot;&gt;see the talk&lt;/a&gt; and &lt;a href=&quot;https://www.wakari.io/sharing/bundle/ketch/SciCADE-talk&quot;&gt;run the talk on Wakari&lt;/a&gt; (or download it and run it locally).  All you need is Python with its scientific packages (numpy, scipy, sympy -- I recommend just installing &lt;a href=&quot;http://www.continuum.io/downloads&quot;&gt;Anaconda Python&lt;/a&gt; if you haven&amp;#39;t already).  I took things a step further and actually ran a bunch of demo code live on Wakari.  I was excited beforehand, and judging by the number of people that came into the room right immediately before my talk (and left immediately afterward), so was the audience.  But I was disappointed with how it went.  Here&amp;#39;s why.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Composing a talk in an IPython notebook is counterintuitive&lt;/strong&gt;.  When I give a talk, I try to tell a compelling and coherent story.  This requires a certain mindset, and somehow the IPython notebook helps rather than hinders -- at least, for me.  I think there is too much of a disconnect between how things look when I&amp;#39;m writing them and how they look as slides.  In theory Beamer is worse in this respect, but it felt worse with the notebook.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It is hard to engage your audience with code&lt;/strong&gt;.  Almost nobody can digest complicated formulas during a talk, which is why even when I speak to mathematicians I usually have very few equations and lots of pictures.  Well, the same goes for code -- nobody can digest more than a few simple lines on a slide.  I think I did a good job of keeping the code short, high-level, and intuitive, but it still felt flat.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code in the talk needs to execute very quickly&lt;/strong&gt;.  This is obvious for code that you run as a live demo, but I found it necessary also for code snippets that I didn&amp;#39;t run live (but where I wanted to show the results).  That&amp;#39;s because when you recompile your talk (which I do &lt;em&gt;many, many times&lt;/em&gt; during the composing process), you have to wait for all that code to execute again.  It doesn&amp;#39;t help that things seem to run significantly slower on Wakari than on my laptop.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The IPython notebook format is not (yet) good at displaying graphs and tables&lt;/strong&gt;.  Talks full of text put people to sleep, and code is text, so this kind of talk already has a strike against it.  But to makes matters worse, I can&amp;#39;t insert images into my notebook slides without putting an ugly line of code above them.  And the notebook refuses to let me embed vector graphics formats (like PDF), so I have to degrade them to slightly blurry pngs.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It&amp;#39;s hard to judge how long a code-based talk will take&lt;/strong&gt;.  I usually judge conservatively so I can move at a relaxed pace.  But my demo took much longer than I planned (partly due to the difficulty of using a Spanish keyboard), and I had to rush through the last third of the talk in about 2 minutes.  I guess this is something to learn with practice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The default fonts in notebook-converted slides are just too small&lt;/strong&gt;.  They are fine for someone sitting at a computer screen, but much too small for the projector screen at the front of a large screen.  You can adjust the size in the browser using &amp;#39;+&amp;#39;, but the result looks ugly for some reason.  I know the fonts can be changed using CSS, and I&amp;#39;ll make them larger next time.&lt;/p&gt;

&lt;p&gt;For me, the worst condemnation of any talk is that no questions are asked afterward.  I haven&amp;#39;t had that happen in a long time, but this was close: there was only one question, and that question demonstrated that I had completely failed to convey what was going on behind a lot of the code I had showed.&lt;/p&gt;

&lt;p&gt;It feels too soon to give up on this approach to talks; I will try it again some time.  Perhaps I just haven&amp;#39;t found the right use for this medium.  If you have tried giving a similar talk, I&amp;#39;d love to hear your opinion or suggestions.&lt;/p&gt;

&lt;p&gt;One note about the slides: parts of them will not make sense in the absence of my verbal explanations.  I generally avoid including a lot of explanatory text in the slides.  I actually added a lot more than usual in this case because I was planning to post them online.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Don't scrap the DOE CSGF program</title>
   <link href="/2013/06/23/csgf-letter-to-congress.html"/>
   <updated>2013-06-23T00:00:00+00:00</updated>
   <id>h/2013/06/23/csgf-letter-to-congress</id>
   <content type="html">&lt;p&gt;The US federal government &lt;a href=&quot;http://energy.gov/sites/prod/files/2013/04/f0/Volume4.pdf&quot;&gt;has proposed to eliminate a number of smaller
graduate fellowship programs&lt;/a&gt;
and lump them together with the &lt;a href=&quot;http://www.nsfgrfp.org/&quot;&gt;NSF graduate
fellowship&lt;/a&gt;.  Unfortunately, this includes the Dept.
of Energy&amp;#39;s illustrious
&lt;a href=&quot;http://www.krellinst.org/csgf/&quot;&gt;Computational Science Graduate Fellowship (CSGF) program&lt;/a&gt;, 
of which I&amp;#39;m an alumnus.
I think the CSGF program is an irreplaceable
asset that is nurturing the &lt;em&gt;third pillar&lt;/em&gt; of science across disciplines in a way that
a much larger program never could.  &lt;/p&gt;

&lt;p&gt;Here are just a few of the definite, tangible impacts the CSGF program had on me,
off the top of my head:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Because of the program of study requirements, I took a course in optimization,
without which I would never have written &lt;a href=&quot;http://dx.doi.org/10.1090/S0025-5718-09-02209-1&quot;&gt;this paper&lt;/a&gt;, parts of &lt;a href=&quot;http://arxiv.org/abs/1105.5798&quot;&gt;this paper&lt;/a&gt;, and probably
&lt;a href=&quot;http://dx.doi.org/10.2140/camcos.2012.7.247&quot;&gt;this paper&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I met Xiaodong Keyes (a member of the steering committee) and came to KAUST!
I almost certainly would not be here if it weren&amp;#39;t for the CSGF program.&lt;/li&gt;
&lt;li&gt;I met Carl Boettiger and learned about using Jekyll for open notebook science,
resulting in the site you are reading.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the letter I sent to four 
congressional committee members asking them to save the program.  If you 
know the CSGF program and its significance, I urge you to do so too.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dear Senator/Congressman,&lt;/p&gt;

&lt;p&gt;I am writing to you because of your leadership role on the Appropriations Subcommittee on Energy and Water Development.  I am an applied mathematician and an alumnus of the DOE computational science graduate fellowship (CSGF) program.  I am writing because I have learned that funding for the CSGF program is slated to be merged into a much larger NSF graduate fellowship program.  I think this would be a terrible decision, because it would destroy the unique benefits of the CSGF program.&lt;/p&gt;

&lt;p&gt;The CSGF program was the second federal graduate fellowship that I received while pursuing a Ph.D.  The first was a fellowship from the Dept. of Homeland Security.  I would like to emphasize the value of the CSGF program by contrasting it with the DHS fellowship program.  Under the DHS fellowship, I received valuable funding, but that was essentially all.  In contrast,  the CSGF program dramatically altered my career path in several positive ways.  It required me to receive a broader graduate education including computer science and physics, which has allowed me to pursue interdisciplinary research that would otherwise be impossible.  It sent me to a practicum at Sandia National Laboratory, where I established collaborations that continue to this day.  Most importantly, it introduced me to the network of CSGF fellows and alumni, a small and very cohesive community of outstanding computational scientists that is beginning to transform this relatively new scientific discipline.  It is no exaggeration to say that my career has been shaped by my interaction with that community.  I am now a successful professor with my own research funding and have no obligation to attend the annual CSGF conference.  But that interaction is important enough that last year I flew half way around the world, using my own research funds, to spend a few days with the current fellows and other alumni.&lt;/p&gt;

&lt;p&gt;I think that many federal fellowships, including the DHS fellowship, may be well served by their being merged into a larger NSF program.  But the unique benefits of the CSGF program, and especially the scientific community that it fosters, could not exist under a larger program with less focus.  Please keep the DOE CSGF program intact and keep the funding for it within the Advanced Scientific Computing Research (ASCR) office.&lt;/p&gt;

&lt;p&gt;Sincerely,&lt;/p&gt;

&lt;p&gt;Professor Xiaodong I. Qi&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>How to avoid javascript errors when copy-pasting Bibtex citations in Mendeley on Mac OS X</title>
   <link href="/2013/02/15/mendeley_bibtex_javascript_solution.html"/>
   <updated>2013-02-15T00:00:00+00:00</updated>
   <id>h/2013/02/15/mendeley_bibtex_javascript_solution</id>
   <content type="html">&lt;p&gt;I use Mendeley to manage references.  Mendeley has a nice auto-import feature
that will pull down bibliographic data from the web to my database.  When
writing, my workflow typically involves grabbing references from Mendeley in
bibtex format.  The simplest way to do this involves right-clicking on a
publication and selecting &amp;quot;copy citation&amp;quot;.  Provided that one has already
selected &amp;quot;bibtex generic citation style&amp;quot; in the &lt;em&gt;View-&amp;gt;Citation Style&lt;/em&gt; menu,
this action results in the full bibtex entry being copied to the clipboard.&lt;/p&gt;

&lt;p&gt;At least, that&amp;#39;s how it&amp;#39;s supposed to work.&lt;/p&gt;

&lt;p&gt;For a couple of years now, I&amp;#39;ve had the problem that I get this on the clipboard instead:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Error: JavaScript error found: CSL error: Exception: TypeError: &amp;#39;undefined&amp;#39; is not a function, 515, file:///Applications/Mendeley%20Desktop.app/Contents/Resources/citeproc-js/citeproc.js&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Despite this problem being &lt;a href=&quot;https://www.google.com/search?q=mendeley+javascript+error&quot;&gt;reported by numerous users&lt;/a&gt;, Mendeley has never provided a fix that worked for me.  But today, after discussion with Mendeley support, I found my own fix.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What to do:&lt;/strong&gt; Just replace the file &lt;/p&gt;

&lt;p&gt;~/Library/Application Support/Mendeley Desktop/citationStyles-1.0/bibtex.csl&lt;/p&gt;

&lt;p&gt;with the one found at&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.zotero.org/styles/bibtex&quot;&gt;http://www.zotero.org/styles/bibtex&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then re-open Mendeley.  That&amp;#39;s it.  Of course, I reccomend just moving your bibtex.csl rather than deleting it, in case anything goes wrong.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>5 reasons why you should submit your next paper to CAMCoS</title>
   <link href="/2013/01/17/why_to_publish_in_camcos.html"/>
   <updated>2013-01-17T00:00:00+00:00</updated>
   <id>h/2013/01/17/why_to_publish_in_camcos</id>
   <content type="html">&lt;p&gt;I have a new favorite journal: &lt;a href=&quot;http://msp.org/camcos/&quot;&gt;Communications in Applied Mathematics and Computational Science&lt;/a&gt;.  I just published a paper with them for the first time (technically it&amp;#39;s still in press, but you can download it &lt;a href=&quot;http://msp.org/camcos/2012/7-2/p04.xhtml&quot;&gt;here (paywall)&lt;/a&gt; or &lt;a href=&quot;http://numerics.kaust.edu.sa/papers/stability_polynomials/stability_polynomials_2012.html&quot;&gt;here (free; same version)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;CAMCoS is a hidden gem -- it is relatively new (6 years old) and not yet as widely known as most established journals.  I believe that within a few years it will be as coveted a publishing venue as any applied mathematics journal.  Here&amp;#39;s why.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;A respected publisher with an exceptional editorial board.&lt;/strong&gt;  We all know that a primary consideration when submitting an article is the prestige of the publisher and the journal.  CAMCoS is published by &lt;a href=&quot;msp.org&quot;&gt;Mathematical Sciences Publishers (MSP)&lt;/a&gt;, a non-profit run by mathematicians for mathematicians; they also publish Annals of Mathematics, Geometry and Topology, and a number of other excellent journals.  Their website says &amp;quot;&lt;em&gt;our aim is to trans­form sci­entif­ic pub­lish­ing in­to an in­dustry that helps rather than hinders schol­arly activ­ity&lt;/em&gt;&amp;quot;, and their actions back that up.
The CAMCoS editorial board is an outstanding group of some of the world&amp;#39;s leading applied mathematicians; &lt;a href=&quot;http://msp.org/camcos/about/journal/editorial.html&quot;&gt;take a look for yourself&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Timely and thorough peer review and copy-editing.&lt;/strong&gt;  A respected publisher and a famed editorial board are nice, but how well is the journal actually operated?&lt;br&gt;
My experience with CAMCoS puts it far ahead of most other journals I&amp;#39;ve dealt with.  We submitted the article in early July, and it came back in early November: 4 months, which is not lightning-fast but not too shabby.  The referees seemed to be well chosen and to have done a thorough job, suggesting several valuable improvements.  We resubmitted in late November (minor revisions) and the article was accepted five days later.  We submitted the TeX files in early December, and received the galley proofs with copy editing one month later.  The really astonishing part: we approved the proofs on January 7, with one added correction; our article was made available online, in final form &lt;strong&gt;the next day&lt;/strong&gt;, on January 8.  I&amp;#39;ve never before experienced or even heard of that kind of turnaround from a publisher.  For comparison, my SISC paper that was accepted in August still hasn&amp;#39;t been assigned an issue or a DOI (it&amp;#39;s now mid-January).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Electronic PDF features that no other publisher I know offers.&lt;/strong&gt;
The copy editing is high quality, but what really blew me away is that the copy editor went through our bibliography and made every paper title into a hyperlink to the published journal article.  As if that wasn&amp;#39;t enough, he added links to Mathematical Reviews and Zentralblatt for every article that possessed such entries.  These hyperlinks are active in the PDF, as are hyperlinks from references in the paper to the bibliography, references to equations and theorems, etc.&lt;br&gt;
This may seem like a small thing, but I think it&amp;#39;s very powerful.  It means that as you read through the paper, when you see a citation in a sentence that puzzles or interests you, can just click on the citation, which will take you to the bibliography.  Then you can click on the bibliographic entry to go immediately to the paper cited, or a to a review of it!  &lt;a href=&quot;http://numerics.kaust.edu.sa/papers/stability_polynomials/camcos-v7-n2-p04-s.pdf&quot;&gt;Click through to the paper&lt;/a&gt; and try it for yourself.  This is a capability that all journal articles obviously should have had for the last 15 years, but this is the first publisher I&amp;#39;ve seen who understands that.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;You can choose whether to keep your copyright, and you can post the final version of the paper on your website or institutional server.&lt;/strong&gt;  &lt;a href=&quot;http://msp.berkeley.edu/editorial/uploads/camcos/accepted/120712-Qi/copyright.pdf&quot;&gt;MSP&amp;#39;s publishing agreement&lt;/a&gt; has two options: if you wish, you may sign over your copyright to them.  You will still retain the rights to &amp;quot;reproduce [the article] by any means for educational and scientiﬁc purposes ... without fee or permission&amp;quot; as long as you don&amp;#39;t try to charge anyone for it.  Alternatively, you can retain the copyright to your work, granting MSP only a license to publish; the only restriction is again that you can&amp;#39;t charge others a fee for accessing your work.  Their policy has clearly been designed with the author&amp;#39;s interests as primary concern.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;(Virtually) Diamond open access&lt;/strong&gt;.  &lt;a href=&quot;http://symomega.wordpress.com/2012/08/09/green-gold-or-diamond-access/&quot;&gt;Diamond open access&lt;/a&gt; is the OA movement&amp;#39;s dream; a model that avoids the author charges of Gold OA while still providing peer review and a stable DOI (which green OA often lacks).  In strict terms, CAMCoS is not diamond OA, since it requires a subscription.  However, I claim it is virtually diamond OA, for two reasons.  First, CAMCoS uses a moving paywall, under which articles become OA after one year (thus, only the 2012 issue requires a subscription at present).  During that first year, open access can easily be provided by the author posting a copy somewhere.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By way of disclosure, I have no affiliation with CAMCoS and no reason to promote them except that they represent the kind of journal I think the applied mathematics community should support.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Convert SAGE worksheets to IPython notebooks</title>
   <link href="/2013/01/16/sage_to_ipython.html"/>
   <updated>2013-01-16T00:00:00+00:00</updated>
   <id>h/2013/01/16/sage_to_ipython</id>
   <content type="html">&lt;h1&gt;Converting a SAGE worksheet to an IPython notebook&lt;/h1&gt;

&lt;p&gt;Download link: &lt;a href=&quot;&quot;&gt;http://github.com/ketch/sage2ipython/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I use Python to teach numerical methods here at KAUST, and I&amp;#39;m in the process of
switching from using &lt;a href=&quot;http://www.sagemath.org&quot;&gt;SAGE&lt;/a&gt; worksheets to &lt;a href=&quot;http://ipython.org&quot;&gt;IPython&lt;/a&gt;
notebooks (more on the reasons in a later post).  I&amp;#39;ve invested a lot of time over the 
past three years in developing a set of SAGE worksheets and it would be a substantial 
amount of tedious work to manually copy-paste their contents into IPython notebooks.
So I decided to write an automated converter.  &lt;/p&gt;

&lt;p&gt;Each SAGE worksheet is usually stored in a .sws file that is a bzipped tarball;
underneath, there is a text version (called worksheet.html).  If you run
SAGE on your own machine, the text versions of your worksheets can usually be found
in &lt;code&gt;~/.sage/sage_notebook.sagenb/home/username/number/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s a simple matter to convert the SAGE format (that uses triple braces to delimit
code cells) into the IPython format (that I believe is JSON).&lt;br&gt;
Rather than write an actual parser, which seemed like overkill, I just created
a script that steps through the file line-by-line and keeps track of whether it&amp;#39;s in 
a cell.  Debugging it was slightly
painful because if you have the tiniest syntax error, then the IPython notebook server just 
tells you something is wrong and displays nothing.&lt;/p&gt;

&lt;p&gt;You can download the converter from the &lt;a href=&quot;http://github.com/ketch/sage2ipython/&quot;&gt;Github repository&lt;/a&gt;.
It has been tested with SAGE version 4.2.1 and IPython version 0.13.1.  Note that it
has several limitations (see the list below).  But it has served my needs well.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sage2ipython&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sage2ipython&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sage2ipy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/path/to/sage/worksheet/html/file&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;output_file_name.ipynb&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To convert all your SAGE worksheets, do:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import sage2ipython
&amp;gt;&amp;gt;&amp;gt; sage2ipython.convert_all_sage_worksheets(&amp;#39;username&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;em&gt;username&lt;/em&gt; is your account name.  You may also need to edit the 
SAGE notebook account name that occurs in the path in &lt;code&gt;convert_all_sage_worksheets()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you have any problems, it is likely that your worksheet contains some special characters that
need to be escaped in the IPython notebook.  I&amp;#39;ve included fixes for several of those, but almost
certainly not all of them.  Please let me know.&lt;/p&gt;

&lt;p&gt;General notes/limitations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All code blocks are assumed to be Python code blocks.&lt;/li&gt;
&lt;li&gt;Output is simply deleted.&lt;/li&gt;
&lt;li&gt;Everything else is put in Markdown cells.&lt;/li&gt;
&lt;li&gt;Double backslashes are handled properly only if you have the development version of IPython.  Otherwise, you should convert them to quadruple backslashes.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Why I signed the Cost of Knowledge</title>
   <link href="/2012/12/23/why-i-signed-thecostofknowledge.html"/>
   <updated>2012-12-23T00:00:00+00:00</updated>
   <id>h/2012/12/23/why-i-signed-thecostofknowledge</id>
   <content type="html">&lt;p&gt;It has been almost a year since &lt;a href=&quot;http://gowers.wordpress.com/2012/01/21/elsevier-my-part-in-its-downfall/&quot;&gt;Tim Gowers&amp;#39; blog post&lt;/a&gt; about boycotting Elsevier triggered the Cost of Knowledge movement.  &lt;a href=&quot;http://thecostofknowledge.com/&quot;&gt;The boycott has been signed by more than 13,000 people&lt;/a&gt;.  But the vast majority of academics -- including most of my own friends and collaborators -- continue to support Elsevier by gifting to it much of their research output and their labor, enabling &lt;a href=&quot;http://tylerneylon.com/files/Neylon_Open_Sci_Sum_Talk.pdf&quot;&gt;Elsevier to operate at greater profits than Starbucks, Amazon, or Nike&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One of the most common arguments I&amp;#39;ve heard for this continued support goes as follows:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Sure, it would be better if journal prices were lower, but it&amp;#39;s not such a big deal that we should all get worked up about it.  Corporations always seek to maximize profits -- why focus on academic publishers?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Commercial publishers are pillaging academia&lt;/h3&gt;

&lt;p&gt;In September, I spoke with a colleague who is a professor at a small university in Spain.  She told me that she currently has no Ph.D. students and sees no possibility of supervising students &amp;quot;in the next 5-6 years&amp;quot; due to the financial situation at her university.  Furthermore, she confided that each month she is uncertain whether her next paycheck will come.  Last year, all faculty at her university took an involuntary 5% pay-cut as the university struggled to pay its bills.  Another colleague from a major university in Texas told me that the Math department lost 20% of its faculty in the last two years over funding problems, as the university&amp;#39;s budget has decreased by 25%.&lt;/p&gt;

&lt;p&gt;Of course, both of these universities continue to pay a huge sums for Elsevier journal bundles -- that&amp;#39;s a cost they simply can&amp;#39;t cut if they want to continue as a respected institution of higher learning.  Elsevier continues to pillage academic institutions through its strangle-hold on scientific publishing, while professors face salary cuts and students cope with ever-rising tuition.&lt;/p&gt;

&lt;h3&gt;Who is to blame?&lt;/h3&gt;

&lt;p&gt;Many people on both sides of the boycott have argued that we shouldn&amp;#39;t expect commercial publishers to behave any better.  As corporations, the argument goes, their highest allegiance is to their shareholders, not their stakeholders.  Commercial publishers simply can&amp;#39;t be expected to do anything but plunder academia and the general public in order to enrich themselves.  But then who is responsible for channeling funds that should support scientific research but instead go to pay for overpriced journals?  &lt;strong&gt;The guilty party must be the academics who prop up commercial publishers by providing all the content and labor!&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;It&amp;#39;s not you, it&amp;#39;s me&lt;/h3&gt;

&lt;p&gt;Researchers who continue to support Elsevier can pretend that they are passively &amp;quot;staying out of the fight&amp;quot;, but they are deluding themselves.  Submitting or refereeing a paper is a very active and expensive decision.
When I submit a paper, I decide where to deposit a huge investment of my own time and my instution&amp;#39;s (or funding agency&amp;#39;s) money.  That is why I joined the boycott -- why I had to.  It is the scientific publishing equivalent of the Hippocratic oath: &lt;em&gt;First, do no harm.&lt;/em&gt;  Locking away publicly-funded research for the profit of a few is harmful.  Forcing my own university (and taxpayers) to buy back the research they already paid me to do is harmful.  I&amp;#39;m not boycotting in order to stop Elsevier from doing harm, I&amp;#39;m boycotting &lt;em&gt;to prevent myself from doing harm&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;One editor-in-chief of an Elsevier journal pointed out to me that SIAM also operates its journals &amp;quot;at a profit&amp;quot;, meaning that the subscription fees generate more revenue than what it costs to run the journal.  This is true!  But where does that extra revenue go?  It is used to subsidize SIAM conferences, reducing the registration fees I pay.  This can be seen as a shrewd way of leveraging central university budgets (which pay for journal subscriptions) to support my discipline specifically.&lt;/p&gt;

&lt;p&gt;Why would I send my work to a publisher like Elsevier that aims primarily to enrich shareholders when I could send it to a journal of the same quality with a non-profit publisher (like SIAM) that charges much lower prices and uses its income to benefit its customers (members)?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Open scientific collaboration</title>
   <link href="/2012/12/22/habits-of-open-scientist-4-collab.html"/>
   <updated>2012-12-22T00:00:00+00:00</updated>
   <id>h/2012/12/22/habits-of-open-scientist-4-collab</id>
   <content type="html">&lt;p&gt;This is the fourth post in my &lt;a href=&quot;http://davidketcheson.info/2012/07/31/habits-of-open-scientist.html&quot;&gt;series on habits of the open
scientist&lt;/a&gt;.
Here I discuss the fourth habit, &lt;strong&gt;open collaboration&lt;/strong&gt;.  The previous post was
on &lt;a href=&quot;http://davidketcheson.info/2012/08/22/habits-of-open-scientist-3-pre.html&quot;&gt;Pre-publication dissemination of
research&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As mentioned in the introduction to this series, the first three habits are
truly essential for any conscientious scientist.  With the fourth habit, we&amp;#39;re
moving into things that are valuable but less essential -- &lt;em&gt;advanced open
science&lt;/em&gt;, if you will.&lt;/p&gt;

&lt;p&gt;What do I mean by open collaboration?  The use of online tools and social media to connect with new collaborators and provide your own expertise where it is needed most.  For an excellent introduction to the subject, go read &lt;a href=&quot;http://michaelnielsen.org/blog/reinventing-discovery/&quot;&gt;Michael Nielsen&amp;#39;s book, &lt;em&gt;Reinventing  Discovery&lt;/em&gt;&lt;/a&gt;. Here I&amp;#39;ll just focus on a few examples from my own experience:&lt;/p&gt;

&lt;h3&gt;Scientific Q&amp;amp;A sites&lt;/h3&gt;

&lt;p&gt;Often scientific research involves elements of work that have been done before
or are already well understood -- by someone, somewhere.  Sometimes this work
is published and readily available, but other times it is unpublished or
perhaps published in a place you wouldn&amp;#39;t know to look.  Finding the person
with the specialized knowlege you need might take much longer than &amp;quot;reinventing
the wheel&amp;quot;, i.e. redoing the work yourself.  Enter StackExchange, an engine for
connecting questions with correct answers and making them readily available.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m an avid participant in (and former moderator of) the
&lt;a href=&quot;http://scicomp.stackexchange.com&quot;&gt;Stack Exchange for Computational Science&lt;/a&gt;.  I also use &lt;a href=&quot;http://mathoverflow.net&quot;&gt;Mathoverflow&lt;/a&gt; and &lt;a href=&quot;http://stackoverflow.com&quot;&gt;Stack Overflow&lt;/a&gt;.    Some personal examples of the kind of connections I&amp;#39;m talking about are &lt;a href=&quot;http://math.stackexchange.com/questions/86977/polynomials-that-are-orthogonal-over-curves-in-the-complex-plane/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://scicomp.stackexchange.com/questions/65/are-there-operator-splitting-approaches-for-multiphysics-pdes-that-achieve-high&quot;&gt;here&lt;/a&gt;.  These are conversations that would never have taken place &amp;quot;in real life&amp;quot; simply because the people involved have never met each other.&lt;/p&gt;

&lt;p&gt;I also find the &lt;a href=&quot;http://tex.stackexchange.com&quot;&gt;TeX stack exchange&lt;/a&gt; to be a gold
mine, and typically far more useful than browsing through package documentation
on CTAN.&lt;/p&gt;

&lt;h3&gt;Social networks like &lt;a href=&quot;http://plus.google.com&quot;&gt;Google+&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;I use Google+ (and previously Reader, which was a far superior tool) for
sharing new papers that I think may be of interest to my collaborators.  I&amp;#39;ve
also used it to debate journals&amp;#39; editorial policies (with the editors) and for
preliminary planning of conferences and proposals -- to find out who may be
interested in participating.  It&amp;#39;s certainly not suited to discussing
scientific or mathematical concepts in any detail, and it is annoyingly
difficult to sort through new things that are posted.  I think that Facebook is
less useful for this purpose because Facebook is used primarily for personal
content whereas a large community of G+ users (of which I am part) consider it
to be a platform for sharing professional content.  But I&amp;#39;m not a good judge --
I don&amp;#39;t even have a Facebook account.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;http://github.com&quot;&gt;Github&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;I wanted to say &amp;quot;sites like Github&amp;quot;, but I don&amp;#39;t think there are any others.
Online code hosting sites have long facilitated collaboration between existing
teams, but Github takes this to a new level by explicitly promoting
collaboration between people who have never met.  Surprisingly, this paradigm
shift didn&amp;#39;t require any new technology.  Rather, it stems from a combination
of their &amp;quot;code first, ask permission later&amp;quot; pull-request mindset and subtle
differences in the user interface -- like a &amp;quot;fork me&amp;quot; button on every page,
just begging you to modify some stranger&amp;#39;s code.&lt;/p&gt;

&lt;p&gt;Now this philosophy -- and use 0f Github -- has moved beyond just sharing what
we usually think of as computer code.  For instance, Carl Boettiger puts &lt;a href=&quot;http://github.com/cboettig/labnotebook&quot;&gt;the
full source of his Jekyll-based website on
Github&lt;/a&gt;, which enabled me (simply by
forking it) to easily set up this site.&lt;/p&gt;

&lt;h3&gt;A word of caution&lt;/h3&gt;

&lt;p&gt;As useful as all the above are, I&amp;#39;ve found that they can also be a way of
wasting time.  You may find this to be the case if you&amp;#39;re merely trading
opinions with strangers or consuming tidbits of information that aren&amp;#39;t really
relevant to your research -- for instance, I find that my time spent on the
&lt;a href=&quot;http://academia.stackexchange.com&quot;&gt;Academia Stack Exchange&lt;/a&gt; is of dubious
value.  I stepped down from moderating the SciComp Stack Exchange because I
felt it was too time-consuming.  But if used in a focused way, open
collaboration tools can accelerate, enrich, and expand your research.&lt;/p&gt;

&lt;p&gt;What other tools or sites ought to be mentioned here?  Let me know in the comments.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Reflections on the 2012 ICERM Reproducibility Workshop</title>
   <link href="/2012/12/14/icerm-reproducibility.html"/>
   <updated>2012-12-14T00:00:00+00:00</updated>
   <id>h/2012/12/14/icerm-reproducibility</id>
   <content type="html">&lt;p&gt;I spent the last five days at ICERM (the new Math institute at Brown University)
attending the workshop 
&lt;a href=&quot;http://icerm.brown.edu/tw12-5-rcem&quot;&gt;Reproducibility in Computational and Experimental Mathematics&lt;/a&gt;.
The workshop was focused on discussing how mathematicians can ensure that their
computations are reproducible, in order to ensure correctness and facilitate their
use by others.  It&amp;#39;s a topic dear to my heart and one that I&amp;#39;ve
&lt;a href=&quot;http://www.davidketcheson.info/tags.html#reproducible-research&quot;&gt;blogged about before&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My hat is off to
the organizers for managing to assemble a highly diverse group of
experts, including not only academic luminaries from both pure and applied
math, open source software gurus, and leaders from companies like Github and
Google (yes, Peter Norvig
himself attended).  Most of the talks were excellent.  Many included live
demos of great tools, and others introduced me to things that I never thought
you could do with computation -- like discovering new formulas for pi.&lt;/p&gt;

&lt;p&gt;Going into the workshop, I felt that I already knew a lot about 
reproducibility and had relatively good habits in this regard.
So what did I learn?  I picked up a new tool, Andrew Davison&amp;#39;s
&lt;a href=&quot;http://packages.python.org/Sumatra/introduction.html&quot;&gt;Sumatra&lt;/a&gt;,
which I had heard of before but now have begun to use in earnest (more
on that in a future post).  I was impressed with Lorena Barba&amp;#39;s
&lt;a href=&quot;http://dx.doi.org/10.6084/m9.figshare.104539&quot;&gt;Reproducibility PI Manifesto&lt;/a&gt;
and learned a new trick from her: put your figures up on Figshare before
submitting a paper in order to retain copyright on the figures.  I 
marveled at Greg Wilson&amp;#39;s goal of reaching 20% of all scientists with his
&lt;a href=&quot;http://software-carpentry.org/&quot;&gt;Software Carpentry&lt;/a&gt; courses, and I determined
to host such a course at KAUST in the near future.&lt;/p&gt;

&lt;p&gt;I also learned that the reproducibility movement in computational science
and mathematics involves a wide range of opinions and concerns.  For instance,
some consider that the primary motivation for reproducibility is to 
ensure correctness of results, while others feel that it is scientific
productivity.  There is disagreement about how much value should be placed on
code development, on how reproducibility should be taught, and on ways in 
which journals and funding agencies should encourage reproducibility.
In the end, we had difficulty even agreeing on a well-defined
terminology for concepts related to reproducibility.
Nevertheless, there is broad agreement that we need to improve
our habits in recording and presenting our computational work.
On the final day, in a spurt of crazy massive Google Doc collaboration
(have you ever edited a documented live with 30 others at once?)
we drafted a report that I&amp;#39;ll link to here once it appears.&lt;/p&gt;

&lt;p&gt;If you want to know more, take a look at the great &lt;a href=&quot;http://wiki.stodden.net/ICERM_Reproducibility_in_Computational_and_Experimental_Mathematics:_Readings_and_References#Thought_Pieces_Submitted_for_the_ICERM_Workshop&quot;&gt;thought pieces&lt;/a&gt;
submitted and the rest of the material on the &lt;a href=&quot;http://wiki.stodden.net/Main_Page&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Adopting the Reproducible Research Standard</title>
   <link href="/2012/12/06/reproducible-research-standard.html"/>
   <updated>2012-12-06T00:00:00+00:00</updated>
   <id>h/2012/12/06/reproducible-research-standard</id>
   <content type="html">&lt;p&gt;Back in July, I read Victoria Stodden&amp;#39;s work on licensing reproducible
research.  Victoria has proposed the Reproducible Research Standard (RRS),
which is an amalgamation of recommended licenses for what she calls the
&lt;em&gt;research compendium&lt;/em&gt;.  The research compendium is the full set of outputs of a
research project, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The research paper&lt;/li&gt;
&lt;li&gt;Additional media, such as movies&lt;/li&gt;
&lt;li&gt;Computer code&lt;/li&gt;
&lt;li&gt;Data&lt;/li&gt;
&lt;li&gt;A record of the computing environment used to process the code and data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The idea is that all of these components are part of your research and someone
wanting to understand your research may need access to all of them.  The RRS
consists of the following licenses:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons Attribution (BY)&lt;/a&gt; for &lt;strong&gt;media&lt;/strong&gt; (text, figures, movies)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/BSD_licenses%233-clause_license_.28.22New_BSD_License.22_or_.22Modified_BSD_License.22.29&quot;&gt;Modified BSD&lt;/a&gt; for &lt;strong&gt;code&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sciencecommons.org/resources/faq/database-protocol&quot;&gt;Science Commons Database Protocol&lt;/a&gt; for &lt;strong&gt;data&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the most part, this is easy enough to implement: the current academic
 research system frankly doesn&amp;#39;t care what you do with your code, data or
 miscellaneous media outputs.  And I think that actually releasing those is
 the most important part of the RRS.
 But the text and figures of the paper itself
 must be published in a journal, and typically the journal will want the
 copyright -- preventing you from releasing those media under CC-BY.&lt;/p&gt;

&lt;p&gt;Nevertheless, I&amp;#39;ve attempted to follow the full RRS with each of the two papers
I&amp;#39;ve had accepted since then.  &lt;a href=&quot;http://arxiv.org/abs/1111.3499&quot;&gt;The first&lt;/a&gt;
(still in press) was accepted to the SIAM Journal on Scientific Computing
(SISC).  The code is licensed under modified BSD as part of the
&lt;a href=&quot;https://github.com/clawpack/sharpclaw&quot;&gt;SharpClaw&lt;/a&gt; package (now rolled into
&lt;a href=&quot;https://github.com/clawpack/pyclaw&quot;&gt;PyClaw&lt;/a&gt;). After reading &lt;a href=&quot;http://adamdsmith.wordpress.com/2009/07/07/copyright-copywrong/&quot;&gt;one author&amp;#39;s
experience retaining copyright to an article published by
SIAM&lt;/a&gt;, I
decided to try the same approach of modifying the copyright transfer agreement
by &lt;a href=&quot;http://adamdsmith.wordpress.com/2009/07/07/copyright-copywrong/#jp-carousel-138&quot;&gt;striking out the transfer of
copyright&lt;/a&gt;.
I suspected that the instance just linked to went &amp;quot;below the radar&amp;quot;, and I
wanted to be completely above-board, so I pointed out to SIAM that I had
modified the agreement.  What made this particularly interesting is that one of
my co-authors on the paper is Randy LeVeque, chair of the SIAM journals
committee.&lt;/p&gt;

&lt;p&gt;Eventually, SIAM objected  &amp;quot;on the grounds that non-exclusive right to publish
doesn&amp;#39;t prohibit
others from publishing for profit, which may be to [the authors&amp;#39;] disadvantage as
well.&amp;quot;  They agreed instead to an addendum generated via
http://scholars.sciencecommons.org/ that retains for the authors the right to
post the final article on any public server, as long as publication in SISC is
stated.  Since this gave me what I wanted in practical terms, I agreed and
signed the copyright transfer + addendum.  I&amp;#39;ve been told that an ad hoc
committee of SIAM leadership is now discussing how SIAM should handle these
copyright questions like this.&lt;/p&gt;

&lt;p&gt;I came away from this feeling like we had made progress, but I still wanted to
see if I could implement the full RRS with respect to the next paper.  My &lt;a href=&quot;http://arxiv.org/pdf/1201.3035v3.pdf&quot;&gt;next
accepted paper&lt;/a&gt; (also still in press) 
was a submission to &lt;a href=&quot;msp.org/camcos/&quot;&gt;Communications in Applied Mathematics and
Computational Science&lt;/a&gt;, published by the extremely progressive
not-for-profit &lt;a href=&quot;http://msp.org/about/&quot;&gt;Math­em­at­ic­al Sci­ences
Pub­lish­ers&lt;/a&gt;.  This is a truly remarkable journal that
will be the subject of another blog post in the near future, but what&amp;#39;s
important in this context is that the journal doesn&amp;#39;t require authors to
transfer copyright!  They only require a &lt;a href=&quot;http://msp.berkeley.edu/editorial/uploads/camcos/accepted/120712-Qi/copyright.pdf&quot;&gt;license to
publish&lt;/a&gt;
which includes this clause:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The copyright holder retains the right to duplicate the Work by any means and to permit others to do the same with the exception of reproduction by services that collect fees for delivery of documents, which may be licensed only by the Publisher. In each case of authorized duplication of the Work in whole or in part, the Author(s) must still ensure that the original publication by the Publisher is properly credited.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After discussion with my co-author Aron Ahmadia, we&amp;#39;re retaining copyright and
licensing the paper under CC-BY-NC.  The NC (non-commercial clause) seems
necessary to comply with the paragraph above, and seems reasonable to me.  The
code for the paper is released as part of the &lt;a href=&quot;https://github.com/ketch/RK-opt&quot;&gt;RK-opt
package&lt;/a&gt;.  So I&amp;#39;m calling this mission
accomplished.&lt;/p&gt;

&lt;p&gt;I have mixed feelings about whether it makes sense for journals to let authors
keep copyright -- I can see some sense in SIAM&amp;#39;s objection, and I think that
non-profit publishers need to protect enough of a revenue stream to support
their activities.  I think it is better that that revenue come from (low-cost)
subscriptions than from author fees.  It will be interesting to see where
SIAM&amp;#39;s policy falls.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Switching from Blogger to Jekyll</title>
   <link href="/2012/10/25/switching-from-blogger-to-jekyll.html"/>
   <updated>2012-10-25T00:00:00+00:00</updated>
   <id>h/2012/10/25/switching-from-blogger-to-jekyll</id>
   <content type="html">&lt;p&gt;If you&amp;#39;re reading this, then you&amp;#39;ve probably noticed: I moved my blog from &lt;a href=&quot;http://scienceinthesands.blogspot.com&quot;&gt;blogspot&lt;/a&gt; to my own new site.  Among other things, that meant a change in the engine that runs the blog, from &lt;a href=&quot;http://www.blogger.com&quot;&gt;blogger&lt;/a&gt; to &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;.  It was a big jump from the simplest, hosted blogging platform out there to a rather advanced engine designed by hackers for hackers.&lt;/p&gt;

&lt;h2&gt;Why switch?&lt;/h2&gt;

&lt;p&gt;I had been wanting for some time to include a lot more math and code in my blog posts, and it was a hassle with Blogger.  The output often looked funny and was hard to control.  With Jekyll, I get &lt;a href=&quot;http://localhost:4000/2012/10/11/Internal_stability.html&quot;&gt;beautiful results like this&lt;/a&gt;.
I also wanted more control over my blog&amp;#39;s appearance and greater interoperability, which meant &lt;a href=&quot;http://pragprog.com/the-pragmatic-programmer/extracts/tips&quot;&gt;keeping things in plain text&lt;/a&gt; and using (generated) static HTML, both of which Jekyll enables me to do.&lt;/p&gt;

&lt;p&gt;But really the switch was part of a much bigger change: I&amp;#39;ve migrated the content of my professional home page here to davidketcheson.info and begun an open science notebook.  That&amp;#39;s why the link at the top of the page reads &lt;strong&gt;NoteBlog&lt;/strong&gt;: it&amp;#39;s intended to be a combination &lt;strong&gt;notebook&lt;/strong&gt; and &lt;strong&gt;blog&lt;/strong&gt;.  On the blog side, I&amp;#39;ll keep posting about issues like scientific publishing, open science, reproducibility.  On the notebook side, there will be a lot more posts of raw results and experiments from my current research projects, not intended for a general audience.  And somewhere in-between there&amp;#39;ll be reasonably polished expository math-y posts accessible to students and researchers in my field.&lt;/p&gt;

&lt;h2&gt;How I switched&lt;/h2&gt;

&lt;p&gt;It was easy, thanks primarily to Carl Boettiger.  This site was built based on Carl Boettiger&amp;#39;s 
&lt;a href=&quot;http://carlboettiger.info&quot;&gt;labnotebook site&lt;/a&gt;.
Carl publishes the source for his site on Github as the
&lt;a href=&quot;http://github.com/cboettig/labnotebook&quot;&gt;labnotebook project&lt;/a&gt; and
releases it all under &lt;a href=&quot;http://creativecommons.org/publicdomain/zero/1.0/&quot;&gt;CC0&lt;/a&gt;,
so setting my site up was as easy as following 
&lt;a href=&quot;http://www.carlboettiger.info/README.html&quot;&gt;his instructions&lt;/a&gt;,
replacing the _posts directory, and making a few CSS customizations.&lt;/p&gt;

&lt;p&gt;I migrated all my Blogger content following &lt;a href=&quot;http://coolaj86.info/articles/migrate-from-blogger-to-jekyll.html&quot;&gt;these instructions&lt;/a&gt;.  This didn&amp;#39;t manage to bring in the tags or comments, unfortunately.  I had done a poor job of tagging my posts in the past anyway, so I manually re-tagged my 45 existing posts.&lt;/p&gt;

&lt;h2&gt;Subscribing to my new blog and/or notebook&lt;/h2&gt;

&lt;p&gt;One nice thing about having more control is that I can set up separate feeds for different kinds of posts.  On the right you&amp;#39;ll see three RSS feed links: one for all entries (notebook and blog), and one each for the separate notebook and blog feeds.  I imagine most of you will only want to subscribe to the blog, unless you&amp;#39;re interested in my research niche (you can look at the &lt;a href=&quot;http://www.davidketcheson.info/categories.html&quot;&gt;categories page&lt;/a&gt; to get an idea of what each will include).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>You might be a low-quality scientific journal if...</title>
   <link href="/2012/10/16/low_quality_journal.html"/>
   <updated>2012-10-16T00:00:00+00:00</updated>
   <id>h/2012/10/16/low_quality_journal</id>
   <content type="html">&lt;p&gt;In the spirit of Xiaodong Letterman&amp;#39;s top 10 lists, here are my top 10 signs you might be 
a low quality scientific journal, inspired by an e-mail I received today from
&lt;a href=&quot;http://www.ampublisher.com/Canadian-Journal-Computing.html&quot;&gt;Computing in Mathematics, Natural Sciences, Engineering and Medicine&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You are incorporated in Canada, and have &amp;quot;Canadian&amp;quot; in your title, but none of
 your editors lives in Canada.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your scope is so broad that it includes abstract algebra, textile engineering,
and dermatology all in one journal.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Most of your abstracts include misspellings of common English words, like &lt;a href=&quot;http://www.ampublisher.com/June%202010/CMNSEM%20Jun%202010.html&quot;&gt;&amp;quot;stander&amp;quot; for
standard&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Most of your article titles could be used as exercises for grade school students
learning to fix improper verb conjugations and subject-noun agreement.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You promise to complete reviews of articles in mathematics or similar fields in
two weeks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You require math and physics manuscript submissions to be in Microsoft Word format.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You spam researchers in other disciplines with your calls for papers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your chief editor received a Ph.D. in the last five years.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your funding model is &lt;s&gt;vanity press&lt;/s&gt; gold open access.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You regularly invite graduate students to serve on your editorial board.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;On a serious note: a few of these, taken by themselves, might not necessarily be a bad sign.  And
I must say that AM Publishers&amp;#39; author charges (95 USD) are the lowest I&amp;#39;ve ever seen.&lt;/p&gt;

&lt;p&gt;For a related, more serious analysis, see 
&lt;a href=&quot;http://scholarlyoa.com/publishers/&quot;&gt;Beall’s List of Predatory Open-Access Publishers&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Impact of the Elsevier boycott</title>
   <link href="/2012/10/11/elsevier_boycott_impact.html"/>
   <updated>2012-10-11T00:00:00+00:00</updated>
   <id>h/2012/10/11/elsevier_boycott_impact</id>
   <content type="html">&lt;p&gt;Seven months ago, I signed the Elsevier boycott at
&lt;a href=&quot;http://thecostofknowledge.com&quot;&gt;thecostofknowledge.com&lt;/a&gt;.  What impact has this
had?  So far, I&amp;#39;ve&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Submitted 2 manuscripts to SIAM journals that would otherwise have gone to Elsevier journals&lt;/li&gt;
&lt;li&gt;Declined to referee 3 manuscripts from Elsevier journals&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If every signee had a similar impact (admittedly, that&amp;#39;s a very optimistic
view), that would be more than 24,000 journal articles effectively pulled from
Elsevier journals and published elsewhere.  Which might be a good thing for the
editors, since they&amp;#39;d be having a difficult time finding qualified referees in
the communities where the boycott has been adopted.&lt;/p&gt;

&lt;p&gt;It will be impossible to quantify my impact going forward, since I now
automatically rule out Elsevier journals when planning a new paper, and since
I&amp;#39;ve asked editors to remove me from their list of potential referees.&lt;/p&gt;

&lt;p&gt;Some people I&amp;#39;ve met seem to have the perception that the boycotters are deeply
angry people who spend their time muttering curses at commercial publishers.
That simply isn&amp;#39;t the case, and anyone who has read the documents that helped
launch the boycott must know that.  When I refuse to referee for Elsevier
journals, I do so politely and I always suggest alternate reviewers to the
editor.  In every case the editor has been equally polite and understanding.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Blogging an iPython notebook with Jekyll</title>
   <link href="/2012/10/11/blogging_ipython_notebooks_with_jekyll.html"/>
   <updated>2012-10-11T00:00:00+00:00</updated>
   <id>h/2012/10/11/blogging_ipython_notebooks_with_jekyll</id>
   <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Update as of December 2014: Don&amp;#39;t bother using what&amp;#39;s below; go to 
&lt;a href=&quot;http://cscorley.github.io/2014/02/21/blogging-with-ipython-and-jekyll/&quot;&gt;Christop Corley&amp;#39;s blog&lt;/a&gt;
for a much better setup!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;#39;ve been playing around with &lt;a href=&quot;http://ipython.org/ipython-doc/dev/interactive/htmlnotebook.html&quot;&gt;iPython notebooks&lt;/a&gt;
for a while and planning to use them instead of &lt;a href=&quot;http://www.sagemath.org/&quot;&gt;SAGE&lt;/a&gt; 
worksheets for my numerical analysis course next spring.  As a warmup,
I wrote an iPython notebook explaining a bit about internal stability of Runge-Kutta 
methods and showing some new research results using &lt;a href=&quot;http://numerics.kaust.edu.sa/nodepy/&quot;&gt;NodePy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also wanted to post the notebook on my blog here; the ability to more easily
include math and code in blog posts was one of my main motivations for moving
away from Blogger to my own site.  I first tried following &lt;a href=&quot;http://blog.fperez.org/2012/09/blogging-with-ipython-notebook.html&quot;&gt;the instructions given
by Fernando Perez&lt;/a&gt;.
That was quite painless and worked flawlessly, using &lt;code&gt;nbconvert.py&lt;/code&gt; to convert the
.ipynb file directly to HTML, with graphics embedded.  The only issue was that I didn&amp;#39;t love
the look of the output quite as much as I love how Carl Boettiger&amp;#39;s Markdown + Jekyll
posts with code and math look (see an example &lt;a href=&quot;http://www.carlboettiger.info/2012/09/14/analytic-solution-to-multiple-uncertainty.html&quot;&gt;here&lt;/a&gt;).  Besides, Markdown is so much nicer
than HTML, and &lt;code&gt;nbconvert.py&lt;/code&gt; has a Markdown output option.&lt;/p&gt;

&lt;p&gt;So I tried the markdown option:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;nbconvert.py my_nb.ipynb -f markdown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I copied the result to my &lt;code&gt;_posts/&lt;/code&gt; directory, added the &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter&quot;&gt;YAML front-matter&lt;/a&gt; that
Jekyll expects, and took a look.  Everything
was great except that all my plots were gone, of course.  After considering a
few options, I decided for now to put plots for such posts in a subfolder 
&lt;code&gt;jekyll_images/&lt;/code&gt; of my public Dropbox folder.  Then it was a simple matter
of search/replace all the paths to the images.  At that point, it looked
great; you can see the &lt;a href=&quot;https://github.com/ketch/nodepy/blob/master/examples/Internal_stability.ipynb&quot;&gt;source&lt;/a&gt;
and the &lt;a href=&quot;http://davidketcheson.info/2012/10/11/Internal_stability.html&quot;&gt;result&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The only issue was that I didn&amp;#39;t want to manually do all that work every time.
I considered creating a new Converter class in &lt;code&gt;nbconvert&lt;/code&gt; to handle it,
but finally decided that it would be more convenient to just write a shell
script that calls &lt;code&gt;nbconvert&lt;/code&gt; and then operates on the result.&lt;br&gt;
Here  it is:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#!/bin/bash

fname=$1

nbconvert.py ${fname}.ipynb -f markdown
sed  -i &amp;#39;&amp;#39; &amp;quot;s#${fname}_files#https:\/\/dl.dropbox.com\/u\/656693\/jekyll_images\/${fname}_files#g&amp;quot;  ${fname}.md

dt=$(date &amp;quot;+%Y-%m-%d&amp;quot;)

echo &amp;quot;0a
---
layout:    post
time:      ${dt}
title:     TITLE-ME
subtitle:  SUBTITLE-ME
tags:      TAG-ME
---
.
w&amp;quot; | ed ${fname}.md

mv ${fname}.md ~/labnotebook/_posts/${dt}-${fname}.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It&amp;#39;s also on Github &lt;a href=&quot;https://github.com/ketch/labnotebook/blob/master/nbconv.sh&quot;&gt;here&lt;/a&gt;.
This was a nice educational exercise in constructing shell scripts, in which I learned or re-learned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;how to use command-line arguments&lt;/li&gt;
&lt;li&gt;how to use sed and ed&lt;/li&gt;
&lt;li&gt;how to use data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can expect a lot more iPython-notebook based posts in the future.&lt;/p&gt;
</content>
 </entry>
 

</feed>
